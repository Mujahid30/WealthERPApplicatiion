//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4963
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace WealthERP.Reports {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("MFReturnsDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class MFReturnsDS : global::System.Data.DataSet {
        
        private MFSchemePerformanceDataTable tableMFSchemePerformance;
        
        private MFTopTenHoldingsDataTable tableMFTopTenHoldings;
        
        private MFTopTenSectorsDataTable tableMFTopTenSectors;
        
        private PortfolioXIRRDataTable tablePortfolioXIRR;
        
        private MFReturnHoldingsDataTable tableMFReturnHoldings;
        
        private MFReturnsSummaryDataTable tableMFReturnsSummary;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MFReturnsDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected MFReturnsDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["MFSchemePerformance"] != null)) {
                    base.Tables.Add(new MFSchemePerformanceDataTable(ds.Tables["MFSchemePerformance"]));
                }
                if ((ds.Tables["MFTopTenHoldings"] != null)) {
                    base.Tables.Add(new MFTopTenHoldingsDataTable(ds.Tables["MFTopTenHoldings"]));
                }
                if ((ds.Tables["MFTopTenSectors"] != null)) {
                    base.Tables.Add(new MFTopTenSectorsDataTable(ds.Tables["MFTopTenSectors"]));
                }
                if ((ds.Tables["PortfolioXIRR"] != null)) {
                    base.Tables.Add(new PortfolioXIRRDataTable(ds.Tables["PortfolioXIRR"]));
                }
                if ((ds.Tables["MFReturnHoldings"] != null)) {
                    base.Tables.Add(new MFReturnHoldingsDataTable(ds.Tables["MFReturnHoldings"]));
                }
                if ((ds.Tables["MFReturnsSummary"] != null)) {
                    base.Tables.Add(new MFReturnsSummaryDataTable(ds.Tables["MFReturnsSummary"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MFSchemePerformanceDataTable MFSchemePerformance {
            get {
                return this.tableMFSchemePerformance;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MFTopTenHoldingsDataTable MFTopTenHoldings {
            get {
                return this.tableMFTopTenHoldings;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MFTopTenSectorsDataTable MFTopTenSectors {
            get {
                return this.tableMFTopTenSectors;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PortfolioXIRRDataTable PortfolioXIRR {
            get {
                return this.tablePortfolioXIRR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MFReturnHoldingsDataTable MFReturnHoldings {
            get {
                return this.tableMFReturnHoldings;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MFReturnsSummaryDataTable MFReturnsSummary {
            get {
                return this.tableMFReturnsSummary;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            MFReturnsDS cln = ((MFReturnsDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["MFSchemePerformance"] != null)) {
                    base.Tables.Add(new MFSchemePerformanceDataTable(ds.Tables["MFSchemePerformance"]));
                }
                if ((ds.Tables["MFTopTenHoldings"] != null)) {
                    base.Tables.Add(new MFTopTenHoldingsDataTable(ds.Tables["MFTopTenHoldings"]));
                }
                if ((ds.Tables["MFTopTenSectors"] != null)) {
                    base.Tables.Add(new MFTopTenSectorsDataTable(ds.Tables["MFTopTenSectors"]));
                }
                if ((ds.Tables["PortfolioXIRR"] != null)) {
                    base.Tables.Add(new PortfolioXIRRDataTable(ds.Tables["PortfolioXIRR"]));
                }
                if ((ds.Tables["MFReturnHoldings"] != null)) {
                    base.Tables.Add(new MFReturnHoldingsDataTable(ds.Tables["MFReturnHoldings"]));
                }
                if ((ds.Tables["MFReturnsSummary"] != null)) {
                    base.Tables.Add(new MFReturnsSummaryDataTable(ds.Tables["MFReturnsSummary"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableMFSchemePerformance = ((MFSchemePerformanceDataTable)(base.Tables["MFSchemePerformance"]));
            if ((initTable == true)) {
                if ((this.tableMFSchemePerformance != null)) {
                    this.tableMFSchemePerformance.InitVars();
                }
            }
            this.tableMFTopTenHoldings = ((MFTopTenHoldingsDataTable)(base.Tables["MFTopTenHoldings"]));
            if ((initTable == true)) {
                if ((this.tableMFTopTenHoldings != null)) {
                    this.tableMFTopTenHoldings.InitVars();
                }
            }
            this.tableMFTopTenSectors = ((MFTopTenSectorsDataTable)(base.Tables["MFTopTenSectors"]));
            if ((initTable == true)) {
                if ((this.tableMFTopTenSectors != null)) {
                    this.tableMFTopTenSectors.InitVars();
                }
            }
            this.tablePortfolioXIRR = ((PortfolioXIRRDataTable)(base.Tables["PortfolioXIRR"]));
            if ((initTable == true)) {
                if ((this.tablePortfolioXIRR != null)) {
                    this.tablePortfolioXIRR.InitVars();
                }
            }
            this.tableMFReturnHoldings = ((MFReturnHoldingsDataTable)(base.Tables["MFReturnHoldings"]));
            if ((initTable == true)) {
                if ((this.tableMFReturnHoldings != null)) {
                    this.tableMFReturnHoldings.InitVars();
                }
            }
            this.tableMFReturnsSummary = ((MFReturnsSummaryDataTable)(base.Tables["MFReturnsSummary"]));
            if ((initTable == true)) {
                if ((this.tableMFReturnsSummary != null)) {
                    this.tableMFReturnsSummary.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "MFReturnsDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/MFReturnsDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableMFSchemePerformance = new MFSchemePerformanceDataTable();
            base.Tables.Add(this.tableMFSchemePerformance);
            this.tableMFTopTenHoldings = new MFTopTenHoldingsDataTable();
            base.Tables.Add(this.tableMFTopTenHoldings);
            this.tableMFTopTenSectors = new MFTopTenSectorsDataTable();
            base.Tables.Add(this.tableMFTopTenSectors);
            this.tablePortfolioXIRR = new PortfolioXIRRDataTable();
            base.Tables.Add(this.tablePortfolioXIRR);
            this.tableMFReturnHoldings = new MFReturnHoldingsDataTable();
            base.Tables.Add(this.tableMFReturnHoldings);
            this.tableMFReturnsSummary = new MFReturnsSummaryDataTable();
            base.Tables.Add(this.tableMFReturnsSummary);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMFSchemePerformance() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMFTopTenHoldings() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMFTopTenSectors() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePortfolioXIRR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMFReturnHoldings() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMFReturnsSummary() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            MFReturnsDS ds = new MFReturnsDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void MFSchemePerformanceRowChangeEventHandler(object sender, MFSchemePerformanceRowChangeEvent e);
        
        public delegate void MFTopTenHoldingsRowChangeEventHandler(object sender, MFTopTenHoldingsRowChangeEvent e);
        
        public delegate void MFTopTenSectorsRowChangeEventHandler(object sender, MFTopTenSectorsRowChangeEvent e);
        
        public delegate void PortfolioXIRRRowChangeEventHandler(object sender, PortfolioXIRRRowChangeEvent e);
        
        public delegate void MFReturnHoldingsRowChangeEventHandler(object sender, MFReturnHoldingsRowChangeEvent e);
        
        public delegate void MFReturnsSummaryRowChangeEventHandler(object sender, MFReturnsSummaryRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MFSchemePerformanceDataTable : global::System.Data.TypedTableBase<MFSchemePerformanceRow> {
            
            private global::System.Data.DataColumn columnSchemeCode;
            
            private global::System.Data.DataColumn columnSchemeName;
            
            private global::System.Data.DataColumn columnCurrentValue;
            
            private global::System.Data.DataColumn columnOneMonthReturn;
            
            private global::System.Data.DataColumn columnSixMonthReturn;
            
            private global::System.Data.DataColumn columnOneYearReturn;
            
            private global::System.Data.DataColumn columnThreeYearReturn;
            
            private global::System.Data.DataColumn columnFiveYearReturn;
            
            private global::System.Data.DataColumn columnInceptionReturn;
            
            private global::System.Data.DataColumn columnCashInPortfolio;
            
            private global::System.Data.DataColumn columnPE;
            
            private global::System.Data.DataColumn columnPB;
            
            private global::System.Data.DataColumn columnSharpe;
            
            private global::System.Data.DataColumn columnSd;
            
            private global::System.Data.DataColumn columnTop5Holding;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MFSchemePerformanceDataTable() {
                this.TableName = "MFSchemePerformance";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MFSchemePerformanceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MFSchemePerformanceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SchemeCodeColumn {
                get {
                    return this.columnSchemeCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SchemeNameColumn {
                get {
                    return this.columnSchemeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurrentValueColumn {
                get {
                    return this.columnCurrentValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OneMonthReturnColumn {
                get {
                    return this.columnOneMonthReturn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SixMonthReturnColumn {
                get {
                    return this.columnSixMonthReturn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OneYearReturnColumn {
                get {
                    return this.columnOneYearReturn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThreeYearReturnColumn {
                get {
                    return this.columnThreeYearReturn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiveYearReturnColumn {
                get {
                    return this.columnFiveYearReturn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InceptionReturnColumn {
                get {
                    return this.columnInceptionReturn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CashInPortfolioColumn {
                get {
                    return this.columnCashInPortfolio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PEColumn {
                get {
                    return this.columnPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PBColumn {
                get {
                    return this.columnPB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SharpeColumn {
                get {
                    return this.columnSharpe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SdColumn {
                get {
                    return this.columnSd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Top5HoldingColumn {
                get {
                    return this.columnTop5Holding;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MFSchemePerformanceRow this[int index] {
                get {
                    return ((MFSchemePerformanceRow)(this.Rows[index]));
                }
            }
            
            public event MFSchemePerformanceRowChangeEventHandler MFSchemePerformanceRowChanging;
            
            public event MFSchemePerformanceRowChangeEventHandler MFSchemePerformanceRowChanged;
            
            public event MFSchemePerformanceRowChangeEventHandler MFSchemePerformanceRowDeleting;
            
            public event MFSchemePerformanceRowChangeEventHandler MFSchemePerformanceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMFSchemePerformanceRow(MFSchemePerformanceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MFSchemePerformanceRow AddMFSchemePerformanceRow(short SchemeCode, string SchemeName, double CurrentValue, double OneMonthReturn, double SixMonthReturn, double OneYearReturn, double ThreeYearReturn, double FiveYearReturn, double InceptionReturn, double CashInPortfolio, double PE, double PB, double Sharpe, double Sd, double Top5Holding) {
                MFSchemePerformanceRow rowMFSchemePerformanceRow = ((MFSchemePerformanceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SchemeCode,
                        SchemeName,
                        CurrentValue,
                        OneMonthReturn,
                        SixMonthReturn,
                        OneYearReturn,
                        ThreeYearReturn,
                        FiveYearReturn,
                        InceptionReturn,
                        CashInPortfolio,
                        PE,
                        PB,
                        Sharpe,
                        Sd,
                        Top5Holding};
                rowMFSchemePerformanceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMFSchemePerformanceRow);
                return rowMFSchemePerformanceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MFSchemePerformanceDataTable cln = ((MFSchemePerformanceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MFSchemePerformanceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSchemeCode = base.Columns["SchemeCode"];
                this.columnSchemeName = base.Columns["SchemeName"];
                this.columnCurrentValue = base.Columns["CurrentValue"];
                this.columnOneMonthReturn = base.Columns["OneMonthReturn"];
                this.columnSixMonthReturn = base.Columns["SixMonthReturn"];
                this.columnOneYearReturn = base.Columns["OneYearReturn"];
                this.columnThreeYearReturn = base.Columns["ThreeYearReturn"];
                this.columnFiveYearReturn = base.Columns["FiveYearReturn"];
                this.columnInceptionReturn = base.Columns["InceptionReturn"];
                this.columnCashInPortfolio = base.Columns["CashInPortfolio"];
                this.columnPE = base.Columns["PE"];
                this.columnPB = base.Columns["PB"];
                this.columnSharpe = base.Columns["Sharpe"];
                this.columnSd = base.Columns["Sd"];
                this.columnTop5Holding = base.Columns["Top5Holding"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSchemeCode = new global::System.Data.DataColumn("SchemeCode", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSchemeCode);
                this.columnSchemeName = new global::System.Data.DataColumn("SchemeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSchemeName);
                this.columnCurrentValue = new global::System.Data.DataColumn("CurrentValue", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentValue);
                this.columnOneMonthReturn = new global::System.Data.DataColumn("OneMonthReturn", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOneMonthReturn);
                this.columnSixMonthReturn = new global::System.Data.DataColumn("SixMonthReturn", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSixMonthReturn);
                this.columnOneYearReturn = new global::System.Data.DataColumn("OneYearReturn", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOneYearReturn);
                this.columnThreeYearReturn = new global::System.Data.DataColumn("ThreeYearReturn", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThreeYearReturn);
                this.columnFiveYearReturn = new global::System.Data.DataColumn("FiveYearReturn", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiveYearReturn);
                this.columnInceptionReturn = new global::System.Data.DataColumn("InceptionReturn", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInceptionReturn);
                this.columnCashInPortfolio = new global::System.Data.DataColumn("CashInPortfolio", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCashInPortfolio);
                this.columnPE = new global::System.Data.DataColumn("PE", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPE);
                this.columnPB = new global::System.Data.DataColumn("PB", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPB);
                this.columnSharpe = new global::System.Data.DataColumn("Sharpe", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSharpe);
                this.columnSd = new global::System.Data.DataColumn("Sd", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSd);
                this.columnTop5Holding = new global::System.Data.DataColumn("Top5Holding", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTop5Holding);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MFSchemePerformanceRow NewMFSchemePerformanceRow() {
                return ((MFSchemePerformanceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MFSchemePerformanceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MFSchemePerformanceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MFSchemePerformanceRowChanged != null)) {
                    this.MFSchemePerformanceRowChanged(this, new MFSchemePerformanceRowChangeEvent(((MFSchemePerformanceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MFSchemePerformanceRowChanging != null)) {
                    this.MFSchemePerformanceRowChanging(this, new MFSchemePerformanceRowChangeEvent(((MFSchemePerformanceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MFSchemePerformanceRowDeleted != null)) {
                    this.MFSchemePerformanceRowDeleted(this, new MFSchemePerformanceRowChangeEvent(((MFSchemePerformanceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MFSchemePerformanceRowDeleting != null)) {
                    this.MFSchemePerformanceRowDeleting(this, new MFSchemePerformanceRowChangeEvent(((MFSchemePerformanceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMFSchemePerformanceRow(MFSchemePerformanceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MFReturnsDS ds = new MFReturnsDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MFSchemePerformanceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MFTopTenHoldingsDataTable : global::System.Data.TypedTableBase<MFTopTenHoldingsRow> {
            
            private global::System.Data.DataColumn columnInstrument;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnPercentage;
            
            private global::System.Data.DataColumn columnInsType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MFTopTenHoldingsDataTable() {
                this.TableName = "MFTopTenHoldings";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MFTopTenHoldingsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MFTopTenHoldingsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstrumentColumn {
                get {
                    return this.columnInstrument;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PercentageColumn {
                get {
                    return this.columnPercentage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsTypeColumn {
                get {
                    return this.columnInsType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MFTopTenHoldingsRow this[int index] {
                get {
                    return ((MFTopTenHoldingsRow)(this.Rows[index]));
                }
            }
            
            public event MFTopTenHoldingsRowChangeEventHandler MFTopTenHoldingsRowChanging;
            
            public event MFTopTenHoldingsRowChangeEventHandler MFTopTenHoldingsRowChanged;
            
            public event MFTopTenHoldingsRowChangeEventHandler MFTopTenHoldingsRowDeleting;
            
            public event MFTopTenHoldingsRowChangeEventHandler MFTopTenHoldingsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMFTopTenHoldingsRow(MFTopTenHoldingsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MFTopTenHoldingsRow AddMFTopTenHoldingsRow(string Instrument, double Amount, double Percentage, string InsType) {
                MFTopTenHoldingsRow rowMFTopTenHoldingsRow = ((MFTopTenHoldingsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Instrument,
                        Amount,
                        Percentage,
                        InsType};
                rowMFTopTenHoldingsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMFTopTenHoldingsRow);
                return rowMFTopTenHoldingsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MFTopTenHoldingsDataTable cln = ((MFTopTenHoldingsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MFTopTenHoldingsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnInstrument = base.Columns["Instrument"];
                this.columnAmount = base.Columns["Amount"];
                this.columnPercentage = base.Columns["Percentage"];
                this.columnInsType = base.Columns["InsType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnInstrument = new global::System.Data.DataColumn("Instrument", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstrument);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnPercentage = new global::System.Data.DataColumn("Percentage", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPercentage);
                this.columnInsType = new global::System.Data.DataColumn("InsType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsType);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MFTopTenHoldingsRow NewMFTopTenHoldingsRow() {
                return ((MFTopTenHoldingsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MFTopTenHoldingsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MFTopTenHoldingsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MFTopTenHoldingsRowChanged != null)) {
                    this.MFTopTenHoldingsRowChanged(this, new MFTopTenHoldingsRowChangeEvent(((MFTopTenHoldingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MFTopTenHoldingsRowChanging != null)) {
                    this.MFTopTenHoldingsRowChanging(this, new MFTopTenHoldingsRowChangeEvent(((MFTopTenHoldingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MFTopTenHoldingsRowDeleted != null)) {
                    this.MFTopTenHoldingsRowDeleted(this, new MFTopTenHoldingsRowChangeEvent(((MFTopTenHoldingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MFTopTenHoldingsRowDeleting != null)) {
                    this.MFTopTenHoldingsRowDeleting(this, new MFTopTenHoldingsRowChangeEvent(((MFTopTenHoldingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMFTopTenHoldingsRow(MFTopTenHoldingsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MFReturnsDS ds = new MFReturnsDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MFTopTenHoldingsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MFTopTenSectorsDataTable : global::System.Data.TypedTableBase<MFTopTenSectorsRow> {
            
            private global::System.Data.DataColumn columnSectorCode;
            
            private global::System.Data.DataColumn columnSector;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnPercentage;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MFTopTenSectorsDataTable() {
                this.TableName = "MFTopTenSectors";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MFTopTenSectorsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MFTopTenSectorsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectorCodeColumn {
                get {
                    return this.columnSectorCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectorColumn {
                get {
                    return this.columnSector;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PercentageColumn {
                get {
                    return this.columnPercentage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MFTopTenSectorsRow this[int index] {
                get {
                    return ((MFTopTenSectorsRow)(this.Rows[index]));
                }
            }
            
            public event MFTopTenSectorsRowChangeEventHandler MFTopTenSectorsRowChanging;
            
            public event MFTopTenSectorsRowChangeEventHandler MFTopTenSectorsRowChanged;
            
            public event MFTopTenSectorsRowChangeEventHandler MFTopTenSectorsRowDeleting;
            
            public event MFTopTenSectorsRowChangeEventHandler MFTopTenSectorsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMFTopTenSectorsRow(MFTopTenSectorsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MFTopTenSectorsRow AddMFTopTenSectorsRow(string SectorCode, string Sector, double Amount, double Percentage) {
                MFTopTenSectorsRow rowMFTopTenSectorsRow = ((MFTopTenSectorsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SectorCode,
                        Sector,
                        Amount,
                        Percentage};
                rowMFTopTenSectorsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMFTopTenSectorsRow);
                return rowMFTopTenSectorsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MFTopTenSectorsDataTable cln = ((MFTopTenSectorsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MFTopTenSectorsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSectorCode = base.Columns["SectorCode"];
                this.columnSector = base.Columns["Sector"];
                this.columnAmount = base.Columns["Amount"];
                this.columnPercentage = base.Columns["Percentage"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSectorCode = new global::System.Data.DataColumn("SectorCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectorCode);
                this.columnSector = new global::System.Data.DataColumn("Sector", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSector);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnPercentage = new global::System.Data.DataColumn("Percentage", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPercentage);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MFTopTenSectorsRow NewMFTopTenSectorsRow() {
                return ((MFTopTenSectorsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MFTopTenSectorsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MFTopTenSectorsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MFTopTenSectorsRowChanged != null)) {
                    this.MFTopTenSectorsRowChanged(this, new MFTopTenSectorsRowChangeEvent(((MFTopTenSectorsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MFTopTenSectorsRowChanging != null)) {
                    this.MFTopTenSectorsRowChanging(this, new MFTopTenSectorsRowChangeEvent(((MFTopTenSectorsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MFTopTenSectorsRowDeleted != null)) {
                    this.MFTopTenSectorsRowDeleted(this, new MFTopTenSectorsRowChangeEvent(((MFTopTenSectorsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MFTopTenSectorsRowDeleting != null)) {
                    this.MFTopTenSectorsRowDeleting(this, new MFTopTenSectorsRowChangeEvent(((MFTopTenSectorsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMFTopTenSectorsRow(MFTopTenSectorsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MFReturnsDS ds = new MFReturnsDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MFTopTenSectorsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PortfolioXIRRDataTable : global::System.Data.TypedTableBase<PortfolioXIRRRow> {
            
            private global::System.Data.DataColumn columnCustomerId;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnPortfolioId;
            
            private global::System.Data.DataColumn columnXIRR;
            
            private global::System.Data.DataColumn columnPortfolioName;
            
            private global::System.Data.DataColumn columnAbsoluteReturn;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PortfolioXIRRDataTable() {
                this.TableName = "PortfolioXIRR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PortfolioXIRRDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PortfolioXIRRDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIdColumn {
                get {
                    return this.columnCustomerId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PortfolioIdColumn {
                get {
                    return this.columnPortfolioId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn XIRRColumn {
                get {
                    return this.columnXIRR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PortfolioNameColumn {
                get {
                    return this.columnPortfolioName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AbsoluteReturnColumn {
                get {
                    return this.columnAbsoluteReturn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PortfolioXIRRRow this[int index] {
                get {
                    return ((PortfolioXIRRRow)(this.Rows[index]));
                }
            }
            
            public event PortfolioXIRRRowChangeEventHandler PortfolioXIRRRowChanging;
            
            public event PortfolioXIRRRowChangeEventHandler PortfolioXIRRRowChanged;
            
            public event PortfolioXIRRRowChangeEventHandler PortfolioXIRRRowDeleting;
            
            public event PortfolioXIRRRowChangeEventHandler PortfolioXIRRRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPortfolioXIRRRow(PortfolioXIRRRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PortfolioXIRRRow AddPortfolioXIRRRow(int CustomerId, string CustomerName, int PortfolioId, decimal XIRR, string PortfolioName, long AbsoluteReturn) {
                PortfolioXIRRRow rowPortfolioXIRRRow = ((PortfolioXIRRRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CustomerId,
                        CustomerName,
                        PortfolioId,
                        XIRR,
                        PortfolioName,
                        AbsoluteReturn};
                rowPortfolioXIRRRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPortfolioXIRRRow);
                return rowPortfolioXIRRRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PortfolioXIRRDataTable cln = ((PortfolioXIRRDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PortfolioXIRRDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCustomerId = base.Columns["CustomerId"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnPortfolioId = base.Columns["PortfolioId"];
                this.columnXIRR = base.Columns["XIRR"];
                this.columnPortfolioName = base.Columns["PortfolioName"];
                this.columnAbsoluteReturn = base.Columns["AbsoluteReturn"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCustomerId = new global::System.Data.DataColumn("CustomerId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerId);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnPortfolioId = new global::System.Data.DataColumn("PortfolioId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPortfolioId);
                this.columnXIRR = new global::System.Data.DataColumn("XIRR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXIRR);
                this.columnPortfolioName = new global::System.Data.DataColumn("PortfolioName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPortfolioName);
                this.columnAbsoluteReturn = new global::System.Data.DataColumn("AbsoluteReturn", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbsoluteReturn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PortfolioXIRRRow NewPortfolioXIRRRow() {
                return ((PortfolioXIRRRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PortfolioXIRRRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PortfolioXIRRRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PortfolioXIRRRowChanged != null)) {
                    this.PortfolioXIRRRowChanged(this, new PortfolioXIRRRowChangeEvent(((PortfolioXIRRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PortfolioXIRRRowChanging != null)) {
                    this.PortfolioXIRRRowChanging(this, new PortfolioXIRRRowChangeEvent(((PortfolioXIRRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PortfolioXIRRRowDeleted != null)) {
                    this.PortfolioXIRRRowDeleted(this, new PortfolioXIRRRowChangeEvent(((PortfolioXIRRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PortfolioXIRRRowDeleting != null)) {
                    this.PortfolioXIRRRowDeleting(this, new PortfolioXIRRRowChangeEvent(((PortfolioXIRRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePortfolioXIRRRow(PortfolioXIRRRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MFReturnsDS ds = new MFReturnsDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PortfolioXIRRDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MFReturnHoldingsDataTable : global::System.Data.TypedTableBase<MFReturnHoldingsRow> {
            
            private global::System.Data.DataColumn columnScheme;
            
            private global::System.Data.DataColumn columnPASP_SchemePlanCode;
            
            private global::System.Data.DataColumn columnFolioNo;
            
            private global::System.Data.DataColumn columnCP_PortfolioId;
            
            private global::System.Data.DataColumn columnportfolioName;
            
            private global::System.Data.DataColumn columnInvestedCost;
            
            private global::System.Data.DataColumn columnPurchase;
            
            private global::System.Data.DataColumn columnDVR;
            
            private global::System.Data.DataColumn columnUnitsAll;
            
            private global::System.Data.DataColumn columnNAV;
            
            private global::System.Data.DataColumn columnPurchase_Current;
            
            private global::System.Data.DataColumn columnDVR_Current;
            
            private global::System.Data.DataColumn columnAll_Current;
            
            private global::System.Data.DataColumn columnDivident_DVR;
            
            private global::System.Data.DataColumn columnDivident_DVP;
            
            private global::System.Data.DataColumn columnPL;
            
            private global::System.Data.DataColumn columnAbsoluteReturn;
            
            private global::System.Data.DataColumn columnXIRR;
            
            private global::System.Data.DataColumn columnPAIC_AssetInstrumentCategoryCode;
            
            private global::System.Data.DataColumn columnCategory;
            
            private global::System.Data.DataColumn columnC_CustomerId;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnInvestmentStartDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MFReturnHoldingsDataTable() {
                this.TableName = "MFReturnHoldings";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MFReturnHoldingsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MFReturnHoldingsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SchemeColumn {
                get {
                    return this.columnScheme;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PASP_SchemePlanCodeColumn {
                get {
                    return this.columnPASP_SchemePlanCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FolioNoColumn {
                get {
                    return this.columnFolioNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CP_PortfolioIdColumn {
                get {
                    return this.columnCP_PortfolioId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn portfolioNameColumn {
                get {
                    return this.columnportfolioName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvestedCostColumn {
                get {
                    return this.columnInvestedCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PurchaseColumn {
                get {
                    return this.columnPurchase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DVRColumn {
                get {
                    return this.columnDVR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitsAllColumn {
                get {
                    return this.columnUnitsAll;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAVColumn {
                get {
                    return this.columnNAV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Purchase_CurrentColumn {
                get {
                    return this.columnPurchase_Current;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DVR_CurrentColumn {
                get {
                    return this.columnDVR_Current;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn All_CurrentColumn {
                get {
                    return this.columnAll_Current;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Divident_DVRColumn {
                get {
                    return this.columnDivident_DVR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Divident_DVPColumn {
                get {
                    return this.columnDivident_DVP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PLColumn {
                get {
                    return this.columnPL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AbsoluteReturnColumn {
                get {
                    return this.columnAbsoluteReturn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn XIRRColumn {
                get {
                    return this.columnXIRR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAIC_AssetInstrumentCategoryCodeColumn {
                get {
                    return this.columnPAIC_AssetInstrumentCategoryCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoryColumn {
                get {
                    return this.columnCategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C_CustomerIdColumn {
                get {
                    return this.columnC_CustomerId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvestmentStartDateColumn {
                get {
                    return this.columnInvestmentStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MFReturnHoldingsRow this[int index] {
                get {
                    return ((MFReturnHoldingsRow)(this.Rows[index]));
                }
            }
            
            public event MFReturnHoldingsRowChangeEventHandler MFReturnHoldingsRowChanging;
            
            public event MFReturnHoldingsRowChangeEventHandler MFReturnHoldingsRowChanged;
            
            public event MFReturnHoldingsRowChangeEventHandler MFReturnHoldingsRowDeleting;
            
            public event MFReturnHoldingsRowChangeEventHandler MFReturnHoldingsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMFReturnHoldingsRow(MFReturnHoldingsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MFReturnHoldingsRow AddMFReturnHoldingsRow(
                        string Scheme, 
                        long PASP_SchemePlanCode, 
                        string FolioNo, 
                        long CP_PortfolioId, 
                        string portfolioName, 
                        long InvestedCost, 
                        long Purchase, 
                        long DVR, 
                        long UnitsAll, 
                        long NAV, 
                        long Purchase_Current, 
                        long DVR_Current, 
                        long All_Current, 
                        long Divident_DVR, 
                        long Divident_DVP, 
                        long PL, 
                        long AbsoluteReturn, 
                        long XIRR, 
                        string PAIC_AssetInstrumentCategoryCode, 
                        string Category, 
                        string C_CustomerId, 
                        string CustomerName, 
                        System.DateTime InvestmentStartDate) {
                MFReturnHoldingsRow rowMFReturnHoldingsRow = ((MFReturnHoldingsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Scheme,
                        PASP_SchemePlanCode,
                        FolioNo,
                        CP_PortfolioId,
                        portfolioName,
                        InvestedCost,
                        Purchase,
                        DVR,
                        UnitsAll,
                        NAV,
                        Purchase_Current,
                        DVR_Current,
                        All_Current,
                        Divident_DVR,
                        Divident_DVP,
                        PL,
                        AbsoluteReturn,
                        XIRR,
                        PAIC_AssetInstrumentCategoryCode,
                        Category,
                        C_CustomerId,
                        CustomerName,
                        InvestmentStartDate};
                rowMFReturnHoldingsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMFReturnHoldingsRow);
                return rowMFReturnHoldingsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MFReturnHoldingsDataTable cln = ((MFReturnHoldingsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MFReturnHoldingsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnScheme = base.Columns["Scheme"];
                this.columnPASP_SchemePlanCode = base.Columns["PASP_SchemePlanCode"];
                this.columnFolioNo = base.Columns["FolioNo"];
                this.columnCP_PortfolioId = base.Columns["CP_PortfolioId"];
                this.columnportfolioName = base.Columns["portfolioName"];
                this.columnInvestedCost = base.Columns["InvestedCost"];
                this.columnPurchase = base.Columns["Purchase"];
                this.columnDVR = base.Columns["DVR"];
                this.columnUnitsAll = base.Columns["UnitsAll"];
                this.columnNAV = base.Columns["NAV"];
                this.columnPurchase_Current = base.Columns["Purchase_Current"];
                this.columnDVR_Current = base.Columns["DVR_Current"];
                this.columnAll_Current = base.Columns["All_Current"];
                this.columnDivident_DVR = base.Columns["Divident_DVR"];
                this.columnDivident_DVP = base.Columns["Divident_DVP"];
                this.columnPL = base.Columns["PL"];
                this.columnAbsoluteReturn = base.Columns["AbsoluteReturn"];
                this.columnXIRR = base.Columns["XIRR"];
                this.columnPAIC_AssetInstrumentCategoryCode = base.Columns["PAIC_AssetInstrumentCategoryCode"];
                this.columnCategory = base.Columns["Category"];
                this.columnC_CustomerId = base.Columns["C_CustomerId"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnInvestmentStartDate = base.Columns["InvestmentStartDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnScheme = new global::System.Data.DataColumn("Scheme", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScheme);
                this.columnPASP_SchemePlanCode = new global::System.Data.DataColumn("PASP_SchemePlanCode", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPASP_SchemePlanCode);
                this.columnFolioNo = new global::System.Data.DataColumn("FolioNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFolioNo);
                this.columnCP_PortfolioId = new global::System.Data.DataColumn("CP_PortfolioId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCP_PortfolioId);
                this.columnportfolioName = new global::System.Data.DataColumn("portfolioName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnportfolioName);
                this.columnInvestedCost = new global::System.Data.DataColumn("InvestedCost", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvestedCost);
                this.columnPurchase = new global::System.Data.DataColumn("Purchase", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase);
                this.columnDVR = new global::System.Data.DataColumn("DVR", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDVR);
                this.columnUnitsAll = new global::System.Data.DataColumn("UnitsAll", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitsAll);
                this.columnNAV = new global::System.Data.DataColumn("NAV", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAV);
                this.columnPurchase_Current = new global::System.Data.DataColumn("Purchase_Current", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchase_Current);
                this.columnDVR_Current = new global::System.Data.DataColumn("DVR_Current", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDVR_Current);
                this.columnAll_Current = new global::System.Data.DataColumn("All_Current", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAll_Current);
                this.columnDivident_DVR = new global::System.Data.DataColumn("Divident_DVR", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDivident_DVR);
                this.columnDivident_DVP = new global::System.Data.DataColumn("Divident_DVP", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDivident_DVP);
                this.columnPL = new global::System.Data.DataColumn("PL", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPL);
                this.columnAbsoluteReturn = new global::System.Data.DataColumn("AbsoluteReturn", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbsoluteReturn);
                this.columnXIRR = new global::System.Data.DataColumn("XIRR", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXIRR);
                this.columnPAIC_AssetInstrumentCategoryCode = new global::System.Data.DataColumn("PAIC_AssetInstrumentCategoryCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAIC_AssetInstrumentCategoryCode);
                this.columnCategory = new global::System.Data.DataColumn("Category", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategory);
                this.columnC_CustomerId = new global::System.Data.DataColumn("C_CustomerId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC_CustomerId);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnInvestmentStartDate = new global::System.Data.DataColumn("InvestmentStartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvestmentStartDate);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MFReturnHoldingsRow NewMFReturnHoldingsRow() {
                return ((MFReturnHoldingsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MFReturnHoldingsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MFReturnHoldingsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MFReturnHoldingsRowChanged != null)) {
                    this.MFReturnHoldingsRowChanged(this, new MFReturnHoldingsRowChangeEvent(((MFReturnHoldingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MFReturnHoldingsRowChanging != null)) {
                    this.MFReturnHoldingsRowChanging(this, new MFReturnHoldingsRowChangeEvent(((MFReturnHoldingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MFReturnHoldingsRowDeleted != null)) {
                    this.MFReturnHoldingsRowDeleted(this, new MFReturnHoldingsRowChangeEvent(((MFReturnHoldingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MFReturnHoldingsRowDeleting != null)) {
                    this.MFReturnHoldingsRowDeleting(this, new MFReturnHoldingsRowChangeEvent(((MFReturnHoldingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMFReturnHoldingsRow(MFReturnHoldingsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MFReturnsDS ds = new MFReturnsDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MFReturnHoldingsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MFReturnsSummaryDataTable : global::System.Data.TypedTableBase<MFReturnsSummaryRow> {
            
            private global::System.Data.DataColumn columnNetHoldings;
            
            private global::System.Data.DataColumn columnAvgCost;
            
            private global::System.Data.DataColumn columnAcqCost;
            
            private global::System.Data.DataColumn columnCurrNAV;
            
            private global::System.Data.DataColumn columnCurrValue;
            
            private global::System.Data.DataColumn columnDividendIncome;
            
            private global::System.Data.DataColumn columnNotionalPL;
            
            private global::System.Data.DataColumn columnActualPL;
            
            private global::System.Data.DataColumn columnXIRR;
            
            private global::System.Data.DataColumn columnAbsoluteReturn;
            
            private global::System.Data.DataColumn columnPASP_SchemePlanCode;
            
            private global::System.Data.DataColumn columnPASP_SchemePlanName;
            
            private global::System.Data.DataColumn columnCMFA_FolioNum;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnCustomerId;
            
            private global::System.Data.DataColumn columnPortfolioName;
            
            private global::System.Data.DataColumn columnPortfolioId;
            
            private global::System.Data.DataColumn columnCategory;
            
            private global::System.Data.DataColumn columnFolioStartDate;
            
            private global::System.Data.DataColumn columnNetAcqCost;
            
            private global::System.Data.DataColumn columnCMFNP_DividendReinvested;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MFReturnsSummaryDataTable() {
                this.TableName = "MFReturnsSummary";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MFReturnsSummaryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MFReturnsSummaryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetHoldingsColumn {
                get {
                    return this.columnNetHoldings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AvgCostColumn {
                get {
                    return this.columnAvgCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcqCostColumn {
                get {
                    return this.columnAcqCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurrNAVColumn {
                get {
                    return this.columnCurrNAV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurrValueColumn {
                get {
                    return this.columnCurrValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DividendIncomeColumn {
                get {
                    return this.columnDividendIncome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NotionalPLColumn {
                get {
                    return this.columnNotionalPL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ActualPLColumn {
                get {
                    return this.columnActualPL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn XIRRColumn {
                get {
                    return this.columnXIRR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AbsoluteReturnColumn {
                get {
                    return this.columnAbsoluteReturn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PASP_SchemePlanCodeColumn {
                get {
                    return this.columnPASP_SchemePlanCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PASP_SchemePlanNameColumn {
                get {
                    return this.columnPASP_SchemePlanName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CMFA_FolioNumColumn {
                get {
                    return this.columnCMFA_FolioNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIdColumn {
                get {
                    return this.columnCustomerId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PortfolioNameColumn {
                get {
                    return this.columnPortfolioName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PortfolioIdColumn {
                get {
                    return this.columnPortfolioId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoryColumn {
                get {
                    return this.columnCategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FolioStartDateColumn {
                get {
                    return this.columnFolioStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetAcqCostColumn {
                get {
                    return this.columnNetAcqCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CMFNP_DividendReinvestedColumn {
                get {
                    return this.columnCMFNP_DividendReinvested;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MFReturnsSummaryRow this[int index] {
                get {
                    return ((MFReturnsSummaryRow)(this.Rows[index]));
                }
            }
            
            public event MFReturnsSummaryRowChangeEventHandler MFReturnsSummaryRowChanging;
            
            public event MFReturnsSummaryRowChangeEventHandler MFReturnsSummaryRowChanged;
            
            public event MFReturnsSummaryRowChangeEventHandler MFReturnsSummaryRowDeleting;
            
            public event MFReturnsSummaryRowChangeEventHandler MFReturnsSummaryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMFReturnsSummaryRow(MFReturnsSummaryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MFReturnsSummaryRow AddMFReturnsSummaryRow(
                        long NetHoldings, 
                        long AvgCost, 
                        long AcqCost, 
                        long CurrNAV, 
                        long CurrValue, 
                        long DividendIncome, 
                        long NotionalPL, 
                        long ActualPL, 
                        long XIRR, 
                        long AbsoluteReturn, 
                        string PASP_SchemePlanCode, 
                        string PASP_SchemePlanName, 
                        string CMFA_FolioNum, 
                        string CustomerName, 
                        string CustomerId, 
                        string PortfolioName, 
                        string PortfolioId, 
                        string Category, 
                        string FolioStartDate, 
                        long NetAcqCost, 
                        long CMFNP_DividendReinvested) {
                MFReturnsSummaryRow rowMFReturnsSummaryRow = ((MFReturnsSummaryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NetHoldings,
                        AvgCost,
                        AcqCost,
                        CurrNAV,
                        CurrValue,
                        DividendIncome,
                        NotionalPL,
                        ActualPL,
                        XIRR,
                        AbsoluteReturn,
                        PASP_SchemePlanCode,
                        PASP_SchemePlanName,
                        CMFA_FolioNum,
                        CustomerName,
                        CustomerId,
                        PortfolioName,
                        PortfolioId,
                        Category,
                        FolioStartDate,
                        NetAcqCost,
                        CMFNP_DividendReinvested};
                rowMFReturnsSummaryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMFReturnsSummaryRow);
                return rowMFReturnsSummaryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MFReturnsSummaryDataTable cln = ((MFReturnsSummaryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MFReturnsSummaryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNetHoldings = base.Columns["NetHoldings"];
                this.columnAvgCost = base.Columns["AvgCost"];
                this.columnAcqCost = base.Columns["AcqCost"];
                this.columnCurrNAV = base.Columns["CurrNAV"];
                this.columnCurrValue = base.Columns["CurrValue"];
                this.columnDividendIncome = base.Columns["DividendIncome"];
                this.columnNotionalPL = base.Columns["NotionalPL"];
                this.columnActualPL = base.Columns["ActualPL"];
                this.columnXIRR = base.Columns["XIRR"];
                this.columnAbsoluteReturn = base.Columns["AbsoluteReturn"];
                this.columnPASP_SchemePlanCode = base.Columns["PASP_SchemePlanCode"];
                this.columnPASP_SchemePlanName = base.Columns["PASP_SchemePlanName"];
                this.columnCMFA_FolioNum = base.Columns["CMFA_FolioNum"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnCustomerId = base.Columns["CustomerId"];
                this.columnPortfolioName = base.Columns["PortfolioName"];
                this.columnPortfolioId = base.Columns["PortfolioId"];
                this.columnCategory = base.Columns["Category"];
                this.columnFolioStartDate = base.Columns["FolioStartDate"];
                this.columnNetAcqCost = base.Columns["NetAcqCost"];
                this.columnCMFNP_DividendReinvested = base.Columns["CMFNP_DividendReinvested"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNetHoldings = new global::System.Data.DataColumn("NetHoldings", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetHoldings);
                this.columnAvgCost = new global::System.Data.DataColumn("AvgCost", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAvgCost);
                this.columnAcqCost = new global::System.Data.DataColumn("AcqCost", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcqCost);
                this.columnCurrNAV = new global::System.Data.DataColumn("CurrNAV", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrNAV);
                this.columnCurrValue = new global::System.Data.DataColumn("CurrValue", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrValue);
                this.columnDividendIncome = new global::System.Data.DataColumn("DividendIncome", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDividendIncome);
                this.columnNotionalPL = new global::System.Data.DataColumn("NotionalPL", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotionalPL);
                this.columnActualPL = new global::System.Data.DataColumn("ActualPL", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualPL);
                this.columnXIRR = new global::System.Data.DataColumn("XIRR", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXIRR);
                this.columnAbsoluteReturn = new global::System.Data.DataColumn("AbsoluteReturn", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbsoluteReturn);
                this.columnPASP_SchemePlanCode = new global::System.Data.DataColumn("PASP_SchemePlanCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPASP_SchemePlanCode);
                this.columnPASP_SchemePlanName = new global::System.Data.DataColumn("PASP_SchemePlanName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPASP_SchemePlanName);
                this.columnCMFA_FolioNum = new global::System.Data.DataColumn("CMFA_FolioNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMFA_FolioNum);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnCustomerId = new global::System.Data.DataColumn("CustomerId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerId);
                this.columnPortfolioName = new global::System.Data.DataColumn("PortfolioName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPortfolioName);
                this.columnPortfolioId = new global::System.Data.DataColumn("PortfolioId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPortfolioId);
                this.columnCategory = new global::System.Data.DataColumn("Category", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategory);
                this.columnFolioStartDate = new global::System.Data.DataColumn("FolioStartDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFolioStartDate);
                this.columnNetAcqCost = new global::System.Data.DataColumn("NetAcqCost", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetAcqCost);
                this.columnCMFNP_DividendReinvested = new global::System.Data.DataColumn("CMFNP_DividendReinvested", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMFNP_DividendReinvested);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MFReturnsSummaryRow NewMFReturnsSummaryRow() {
                return ((MFReturnsSummaryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MFReturnsSummaryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MFReturnsSummaryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MFReturnsSummaryRowChanged != null)) {
                    this.MFReturnsSummaryRowChanged(this, new MFReturnsSummaryRowChangeEvent(((MFReturnsSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MFReturnsSummaryRowChanging != null)) {
                    this.MFReturnsSummaryRowChanging(this, new MFReturnsSummaryRowChangeEvent(((MFReturnsSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MFReturnsSummaryRowDeleted != null)) {
                    this.MFReturnsSummaryRowDeleted(this, new MFReturnsSummaryRowChangeEvent(((MFReturnsSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MFReturnsSummaryRowDeleting != null)) {
                    this.MFReturnsSummaryRowDeleting(this, new MFReturnsSummaryRowChangeEvent(((MFReturnsSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMFReturnsSummaryRow(MFReturnsSummaryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MFReturnsDS ds = new MFReturnsDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MFReturnsSummaryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MFSchemePerformanceRow : global::System.Data.DataRow {
            
            private MFSchemePerformanceDataTable tableMFSchemePerformance;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MFSchemePerformanceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMFSchemePerformance = ((MFSchemePerformanceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short SchemeCode {
                get {
                    try {
                        return ((short)(this[this.tableMFSchemePerformance.SchemeCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SchemeCode\' in table \'MFSchemePerformance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFSchemePerformance.SchemeCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SchemeName {
                get {
                    try {
                        return ((string)(this[this.tableMFSchemePerformance.SchemeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SchemeName\' in table \'MFSchemePerformance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFSchemePerformance.SchemeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CurrentValue {
                get {
                    try {
                        return ((double)(this[this.tableMFSchemePerformance.CurrentValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentValue\' in table \'MFSchemePerformance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFSchemePerformance.CurrentValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double OneMonthReturn {
                get {
                    try {
                        return ((double)(this[this.tableMFSchemePerformance.OneMonthReturnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OneMonthReturn\' in table \'MFSchemePerformance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFSchemePerformance.OneMonthReturnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SixMonthReturn {
                get {
                    try {
                        return ((double)(this[this.tableMFSchemePerformance.SixMonthReturnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SixMonthReturn\' in table \'MFSchemePerformance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFSchemePerformance.SixMonthReturnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double OneYearReturn {
                get {
                    try {
                        return ((double)(this[this.tableMFSchemePerformance.OneYearReturnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OneYearReturn\' in table \'MFSchemePerformance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFSchemePerformance.OneYearReturnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ThreeYearReturn {
                get {
                    try {
                        return ((double)(this[this.tableMFSchemePerformance.ThreeYearReturnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ThreeYearReturn\' in table \'MFSchemePerformance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFSchemePerformance.ThreeYearReturnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FiveYearReturn {
                get {
                    try {
                        return ((double)(this[this.tableMFSchemePerformance.FiveYearReturnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FiveYearReturn\' in table \'MFSchemePerformance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFSchemePerformance.FiveYearReturnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double InceptionReturn {
                get {
                    try {
                        return ((double)(this[this.tableMFSchemePerformance.InceptionReturnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InceptionReturn\' in table \'MFSchemePerformance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFSchemePerformance.InceptionReturnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CashInPortfolio {
                get {
                    try {
                        return ((double)(this[this.tableMFSchemePerformance.CashInPortfolioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CashInPortfolio\' in table \'MFSchemePerformance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFSchemePerformance.CashInPortfolioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PE {
                get {
                    try {
                        return ((double)(this[this.tableMFSchemePerformance.PEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PE\' in table \'MFSchemePerformance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFSchemePerformance.PEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PB {
                get {
                    try {
                        return ((double)(this[this.tableMFSchemePerformance.PBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PB\' in table \'MFSchemePerformance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFSchemePerformance.PBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Sharpe {
                get {
                    try {
                        return ((double)(this[this.tableMFSchemePerformance.SharpeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sharpe\' in table \'MFSchemePerformance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFSchemePerformance.SharpeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Sd {
                get {
                    try {
                        return ((double)(this[this.tableMFSchemePerformance.SdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sd\' in table \'MFSchemePerformance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFSchemePerformance.SdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Top5Holding {
                get {
                    try {
                        return ((double)(this[this.tableMFSchemePerformance.Top5HoldingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Top5Holding\' in table \'MFSchemePerformance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFSchemePerformance.Top5HoldingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSchemeCodeNull() {
                return this.IsNull(this.tableMFSchemePerformance.SchemeCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSchemeCodeNull() {
                this[this.tableMFSchemePerformance.SchemeCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSchemeNameNull() {
                return this.IsNull(this.tableMFSchemePerformance.SchemeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSchemeNameNull() {
                this[this.tableMFSchemePerformance.SchemeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrentValueNull() {
                return this.IsNull(this.tableMFSchemePerformance.CurrentValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurrentValueNull() {
                this[this.tableMFSchemePerformance.CurrentValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOneMonthReturnNull() {
                return this.IsNull(this.tableMFSchemePerformance.OneMonthReturnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOneMonthReturnNull() {
                this[this.tableMFSchemePerformance.OneMonthReturnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSixMonthReturnNull() {
                return this.IsNull(this.tableMFSchemePerformance.SixMonthReturnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSixMonthReturnNull() {
                this[this.tableMFSchemePerformance.SixMonthReturnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOneYearReturnNull() {
                return this.IsNull(this.tableMFSchemePerformance.OneYearReturnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOneYearReturnNull() {
                this[this.tableMFSchemePerformance.OneYearReturnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThreeYearReturnNull() {
                return this.IsNull(this.tableMFSchemePerformance.ThreeYearReturnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThreeYearReturnNull() {
                this[this.tableMFSchemePerformance.ThreeYearReturnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiveYearReturnNull() {
                return this.IsNull(this.tableMFSchemePerformance.FiveYearReturnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiveYearReturnNull() {
                this[this.tableMFSchemePerformance.FiveYearReturnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInceptionReturnNull() {
                return this.IsNull(this.tableMFSchemePerformance.InceptionReturnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInceptionReturnNull() {
                this[this.tableMFSchemePerformance.InceptionReturnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCashInPortfolioNull() {
                return this.IsNull(this.tableMFSchemePerformance.CashInPortfolioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCashInPortfolioNull() {
                this[this.tableMFSchemePerformance.CashInPortfolioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPENull() {
                return this.IsNull(this.tableMFSchemePerformance.PEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPENull() {
                this[this.tableMFSchemePerformance.PEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPBNull() {
                return this.IsNull(this.tableMFSchemePerformance.PBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPBNull() {
                this[this.tableMFSchemePerformance.PBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSharpeNull() {
                return this.IsNull(this.tableMFSchemePerformance.SharpeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSharpeNull() {
                this[this.tableMFSchemePerformance.SharpeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSdNull() {
                return this.IsNull(this.tableMFSchemePerformance.SdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSdNull() {
                this[this.tableMFSchemePerformance.SdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTop5HoldingNull() {
                return this.IsNull(this.tableMFSchemePerformance.Top5HoldingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTop5HoldingNull() {
                this[this.tableMFSchemePerformance.Top5HoldingColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MFTopTenHoldingsRow : global::System.Data.DataRow {
            
            private MFTopTenHoldingsDataTable tableMFTopTenHoldings;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MFTopTenHoldingsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMFTopTenHoldings = ((MFTopTenHoldingsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Instrument {
                get {
                    try {
                        return ((string)(this[this.tableMFTopTenHoldings.InstrumentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Instrument\' in table \'MFTopTenHoldings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFTopTenHoldings.InstrumentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Amount {
                get {
                    try {
                        return ((double)(this[this.tableMFTopTenHoldings.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'MFTopTenHoldings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFTopTenHoldings.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Percentage {
                get {
                    try {
                        return ((double)(this[this.tableMFTopTenHoldings.PercentageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Percentage\' in table \'MFTopTenHoldings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFTopTenHoldings.PercentageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InsType {
                get {
                    try {
                        return ((string)(this[this.tableMFTopTenHoldings.InsTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsType\' in table \'MFTopTenHoldings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFTopTenHoldings.InsTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInstrumentNull() {
                return this.IsNull(this.tableMFTopTenHoldings.InstrumentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInstrumentNull() {
                this[this.tableMFTopTenHoldings.InstrumentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableMFTopTenHoldings.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableMFTopTenHoldings.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPercentageNull() {
                return this.IsNull(this.tableMFTopTenHoldings.PercentageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPercentageNull() {
                this[this.tableMFTopTenHoldings.PercentageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsTypeNull() {
                return this.IsNull(this.tableMFTopTenHoldings.InsTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsTypeNull() {
                this[this.tableMFTopTenHoldings.InsTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MFTopTenSectorsRow : global::System.Data.DataRow {
            
            private MFTopTenSectorsDataTable tableMFTopTenSectors;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MFTopTenSectorsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMFTopTenSectors = ((MFTopTenSectorsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SectorCode {
                get {
                    try {
                        return ((string)(this[this.tableMFTopTenSectors.SectorCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SectorCode\' in table \'MFTopTenSectors\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFTopTenSectors.SectorCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sector {
                get {
                    try {
                        return ((string)(this[this.tableMFTopTenSectors.SectorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sector\' in table \'MFTopTenSectors\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFTopTenSectors.SectorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Amount {
                get {
                    try {
                        return ((double)(this[this.tableMFTopTenSectors.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'MFTopTenSectors\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFTopTenSectors.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Percentage {
                get {
                    try {
                        return ((double)(this[this.tableMFTopTenSectors.PercentageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Percentage\' in table \'MFTopTenSectors\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFTopTenSectors.PercentageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSectorCodeNull() {
                return this.IsNull(this.tableMFTopTenSectors.SectorCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSectorCodeNull() {
                this[this.tableMFTopTenSectors.SectorCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSectorNull() {
                return this.IsNull(this.tableMFTopTenSectors.SectorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSectorNull() {
                this[this.tableMFTopTenSectors.SectorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableMFTopTenSectors.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableMFTopTenSectors.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPercentageNull() {
                return this.IsNull(this.tableMFTopTenSectors.PercentageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPercentageNull() {
                this[this.tableMFTopTenSectors.PercentageColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PortfolioXIRRRow : global::System.Data.DataRow {
            
            private PortfolioXIRRDataTable tablePortfolioXIRR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PortfolioXIRRRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePortfolioXIRR = ((PortfolioXIRRDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustomerId {
                get {
                    try {
                        return ((int)(this[this.tablePortfolioXIRR.CustomerIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerId\' in table \'PortfolioXIRR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolioXIRR.CustomerIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tablePortfolioXIRR.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'PortfolioXIRR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolioXIRR.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PortfolioId {
                get {
                    try {
                        return ((int)(this[this.tablePortfolioXIRR.PortfolioIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PortfolioId\' in table \'PortfolioXIRR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolioXIRR.PortfolioIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal XIRR {
                get {
                    try {
                        return ((decimal)(this[this.tablePortfolioXIRR.XIRRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XIRR\' in table \'PortfolioXIRR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolioXIRR.XIRRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PortfolioName {
                get {
                    try {
                        return ((string)(this[this.tablePortfolioXIRR.PortfolioNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PortfolioName\' in table \'PortfolioXIRR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolioXIRR.PortfolioNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long AbsoluteReturn {
                get {
                    try {
                        return ((long)(this[this.tablePortfolioXIRR.AbsoluteReturnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AbsoluteReturn\' in table \'PortfolioXIRR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolioXIRR.AbsoluteReturnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerIdNull() {
                return this.IsNull(this.tablePortfolioXIRR.CustomerIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerIdNull() {
                this[this.tablePortfolioXIRR.CustomerIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tablePortfolioXIRR.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tablePortfolioXIRR.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPortfolioIdNull() {
                return this.IsNull(this.tablePortfolioXIRR.PortfolioIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPortfolioIdNull() {
                this[this.tablePortfolioXIRR.PortfolioIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXIRRNull() {
                return this.IsNull(this.tablePortfolioXIRR.XIRRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXIRRNull() {
                this[this.tablePortfolioXIRR.XIRRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPortfolioNameNull() {
                return this.IsNull(this.tablePortfolioXIRR.PortfolioNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPortfolioNameNull() {
                this[this.tablePortfolioXIRR.PortfolioNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbsoluteReturnNull() {
                return this.IsNull(this.tablePortfolioXIRR.AbsoluteReturnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbsoluteReturnNull() {
                this[this.tablePortfolioXIRR.AbsoluteReturnColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MFReturnHoldingsRow : global::System.Data.DataRow {
            
            private MFReturnHoldingsDataTable tableMFReturnHoldings;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MFReturnHoldingsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMFReturnHoldings = ((MFReturnHoldingsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Scheme {
                get {
                    try {
                        return ((string)(this[this.tableMFReturnHoldings.SchemeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Scheme\' in table \'MFReturnHoldings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnHoldings.SchemeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long PASP_SchemePlanCode {
                get {
                    try {
                        return ((long)(this[this.tableMFReturnHoldings.PASP_SchemePlanCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PASP_SchemePlanCode\' in table \'MFReturnHoldings\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableMFReturnHoldings.PASP_SchemePlanCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FolioNo {
                get {
                    try {
                        return ((string)(this[this.tableMFReturnHoldings.FolioNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FolioNo\' in table \'MFReturnHoldings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnHoldings.FolioNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CP_PortfolioId {
                get {
                    try {
                        return ((long)(this[this.tableMFReturnHoldings.CP_PortfolioIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CP_PortfolioId\' in table \'MFReturnHoldings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnHoldings.CP_PortfolioIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string portfolioName {
                get {
                    try {
                        return ((string)(this[this.tableMFReturnHoldings.portfolioNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'portfolioName\' in table \'MFReturnHoldings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnHoldings.portfolioNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long InvestedCost {
                get {
                    try {
                        return ((long)(this[this.tableMFReturnHoldings.InvestedCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvestedCost\' in table \'MFReturnHoldings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnHoldings.InvestedCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long Purchase {
                get {
                    try {
                        return ((long)(this[this.tableMFReturnHoldings.PurchaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase\' in table \'MFReturnHoldings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnHoldings.PurchaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long DVR {
                get {
                    try {
                        return ((long)(this[this.tableMFReturnHoldings.DVRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DVR\' in table \'MFReturnHoldings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnHoldings.DVRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long UnitsAll {
                get {
                    try {
                        return ((long)(this[this.tableMFReturnHoldings.UnitsAllColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitsAll\' in table \'MFReturnHoldings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnHoldings.UnitsAllColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long NAV {
                get {
                    try {
                        return ((long)(this[this.tableMFReturnHoldings.NAVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NAV\' in table \'MFReturnHoldings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnHoldings.NAVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long Purchase_Current {
                get {
                    try {
                        return ((long)(this[this.tableMFReturnHoldings.Purchase_CurrentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchase_Current\' in table \'MFReturnHoldings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnHoldings.Purchase_CurrentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long DVR_Current {
                get {
                    try {
                        return ((long)(this[this.tableMFReturnHoldings.DVR_CurrentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DVR_Current\' in table \'MFReturnHoldings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnHoldings.DVR_CurrentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long All_Current {
                get {
                    try {
                        return ((long)(this[this.tableMFReturnHoldings.All_CurrentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'All_Current\' in table \'MFReturnHoldings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnHoldings.All_CurrentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long Divident_DVR {
                get {
                    try {
                        return ((long)(this[this.tableMFReturnHoldings.Divident_DVRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Divident_DVR\' in table \'MFReturnHoldings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnHoldings.Divident_DVRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long Divident_DVP {
                get {
                    try {
                        return ((long)(this[this.tableMFReturnHoldings.Divident_DVPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Divident_DVP\' in table \'MFReturnHoldings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnHoldings.Divident_DVPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long PL {
                get {
                    try {
                        return ((long)(this[this.tableMFReturnHoldings.PLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PL\' in table \'MFReturnHoldings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnHoldings.PLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long AbsoluteReturn {
                get {
                    try {
                        return ((long)(this[this.tableMFReturnHoldings.AbsoluteReturnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AbsoluteReturn\' in table \'MFReturnHoldings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnHoldings.AbsoluteReturnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long XIRR {
                get {
                    try {
                        return ((long)(this[this.tableMFReturnHoldings.XIRRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XIRR\' in table \'MFReturnHoldings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnHoldings.XIRRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PAIC_AssetInstrumentCategoryCode {
                get {
                    try {
                        return ((string)(this[this.tableMFReturnHoldings.PAIC_AssetInstrumentCategoryCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PAIC_AssetInstrumentCategoryCode\' in table \'MFReturnHolding" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnHoldings.PAIC_AssetInstrumentCategoryCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Category {
                get {
                    try {
                        return ((string)(this[this.tableMFReturnHoldings.CategoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Category\' in table \'MFReturnHoldings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnHoldings.CategoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C_CustomerId {
                get {
                    try {
                        return ((string)(this[this.tableMFReturnHoldings.C_CustomerIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C_CustomerId\' in table \'MFReturnHoldings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnHoldings.C_CustomerIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableMFReturnHoldings.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'MFReturnHoldings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnHoldings.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InvestmentStartDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMFReturnHoldings.InvestmentStartDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvestmentStartDate\' in table \'MFReturnHoldings\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableMFReturnHoldings.InvestmentStartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSchemeNull() {
                return this.IsNull(this.tableMFReturnHoldings.SchemeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSchemeNull() {
                this[this.tableMFReturnHoldings.SchemeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPASP_SchemePlanCodeNull() {
                return this.IsNull(this.tableMFReturnHoldings.PASP_SchemePlanCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPASP_SchemePlanCodeNull() {
                this[this.tableMFReturnHoldings.PASP_SchemePlanCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFolioNoNull() {
                return this.IsNull(this.tableMFReturnHoldings.FolioNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFolioNoNull() {
                this[this.tableMFReturnHoldings.FolioNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCP_PortfolioIdNull() {
                return this.IsNull(this.tableMFReturnHoldings.CP_PortfolioIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCP_PortfolioIdNull() {
                this[this.tableMFReturnHoldings.CP_PortfolioIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsportfolioNameNull() {
                return this.IsNull(this.tableMFReturnHoldings.portfolioNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetportfolioNameNull() {
                this[this.tableMFReturnHoldings.portfolioNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvestedCostNull() {
                return this.IsNull(this.tableMFReturnHoldings.InvestedCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvestedCostNull() {
                this[this.tableMFReturnHoldings.InvestedCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchaseNull() {
                return this.IsNull(this.tableMFReturnHoldings.PurchaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchaseNull() {
                this[this.tableMFReturnHoldings.PurchaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDVRNull() {
                return this.IsNull(this.tableMFReturnHoldings.DVRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDVRNull() {
                this[this.tableMFReturnHoldings.DVRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitsAllNull() {
                return this.IsNull(this.tableMFReturnHoldings.UnitsAllColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitsAllNull() {
                this[this.tableMFReturnHoldings.UnitsAllColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAVNull() {
                return this.IsNull(this.tableMFReturnHoldings.NAVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAVNull() {
                this[this.tableMFReturnHoldings.NAVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchase_CurrentNull() {
                return this.IsNull(this.tableMFReturnHoldings.Purchase_CurrentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchase_CurrentNull() {
                this[this.tableMFReturnHoldings.Purchase_CurrentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDVR_CurrentNull() {
                return this.IsNull(this.tableMFReturnHoldings.DVR_CurrentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDVR_CurrentNull() {
                this[this.tableMFReturnHoldings.DVR_CurrentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAll_CurrentNull() {
                return this.IsNull(this.tableMFReturnHoldings.All_CurrentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAll_CurrentNull() {
                this[this.tableMFReturnHoldings.All_CurrentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDivident_DVRNull() {
                return this.IsNull(this.tableMFReturnHoldings.Divident_DVRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDivident_DVRNull() {
                this[this.tableMFReturnHoldings.Divident_DVRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDivident_DVPNull() {
                return this.IsNull(this.tableMFReturnHoldings.Divident_DVPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDivident_DVPNull() {
                this[this.tableMFReturnHoldings.Divident_DVPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPLNull() {
                return this.IsNull(this.tableMFReturnHoldings.PLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPLNull() {
                this[this.tableMFReturnHoldings.PLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbsoluteReturnNull() {
                return this.IsNull(this.tableMFReturnHoldings.AbsoluteReturnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbsoluteReturnNull() {
                this[this.tableMFReturnHoldings.AbsoluteReturnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXIRRNull() {
                return this.IsNull(this.tableMFReturnHoldings.XIRRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXIRRNull() {
                this[this.tableMFReturnHoldings.XIRRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPAIC_AssetInstrumentCategoryCodeNull() {
                return this.IsNull(this.tableMFReturnHoldings.PAIC_AssetInstrumentCategoryCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPAIC_AssetInstrumentCategoryCodeNull() {
                this[this.tableMFReturnHoldings.PAIC_AssetInstrumentCategoryCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoryNull() {
                return this.IsNull(this.tableMFReturnHoldings.CategoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoryNull() {
                this[this.tableMFReturnHoldings.CategoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC_CustomerIdNull() {
                return this.IsNull(this.tableMFReturnHoldings.C_CustomerIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC_CustomerIdNull() {
                this[this.tableMFReturnHoldings.C_CustomerIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableMFReturnHoldings.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableMFReturnHoldings.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvestmentStartDateNull() {
                return this.IsNull(this.tableMFReturnHoldings.InvestmentStartDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvestmentStartDateNull() {
                this[this.tableMFReturnHoldings.InvestmentStartDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MFReturnsSummaryRow : global::System.Data.DataRow {
            
            private MFReturnsSummaryDataTable tableMFReturnsSummary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MFReturnsSummaryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMFReturnsSummary = ((MFReturnsSummaryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long NetHoldings {
                get {
                    try {
                        return ((long)(this[this.tableMFReturnsSummary.NetHoldingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetHoldings\' in table \'MFReturnsSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnsSummary.NetHoldingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long AvgCost {
                get {
                    try {
                        return ((long)(this[this.tableMFReturnsSummary.AvgCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AvgCost\' in table \'MFReturnsSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnsSummary.AvgCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long AcqCost {
                get {
                    try {
                        return ((long)(this[this.tableMFReturnsSummary.AcqCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AcqCost\' in table \'MFReturnsSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnsSummary.AcqCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CurrNAV {
                get {
                    try {
                        return ((long)(this[this.tableMFReturnsSummary.CurrNAVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrNAV\' in table \'MFReturnsSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnsSummary.CurrNAVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CurrValue {
                get {
                    try {
                        return ((long)(this[this.tableMFReturnsSummary.CurrValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrValue\' in table \'MFReturnsSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnsSummary.CurrValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long DividendIncome {
                get {
                    try {
                        return ((long)(this[this.tableMFReturnsSummary.DividendIncomeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DividendIncome\' in table \'MFReturnsSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnsSummary.DividendIncomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long NotionalPL {
                get {
                    try {
                        return ((long)(this[this.tableMFReturnsSummary.NotionalPLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NotionalPL\' in table \'MFReturnsSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnsSummary.NotionalPLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ActualPL {
                get {
                    try {
                        return ((long)(this[this.tableMFReturnsSummary.ActualPLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualPL\' in table \'MFReturnsSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnsSummary.ActualPLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long XIRR {
                get {
                    try {
                        return ((long)(this[this.tableMFReturnsSummary.XIRRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XIRR\' in table \'MFReturnsSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnsSummary.XIRRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long AbsoluteReturn {
                get {
                    try {
                        return ((long)(this[this.tableMFReturnsSummary.AbsoluteReturnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AbsoluteReturn\' in table \'MFReturnsSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnsSummary.AbsoluteReturnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PASP_SchemePlanCode {
                get {
                    try {
                        return ((string)(this[this.tableMFReturnsSummary.PASP_SchemePlanCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PASP_SchemePlanCode\' in table \'MFReturnsSummary\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableMFReturnsSummary.PASP_SchemePlanCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PASP_SchemePlanName {
                get {
                    try {
                        return ((string)(this[this.tableMFReturnsSummary.PASP_SchemePlanNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PASP_SchemePlanName\' in table \'MFReturnsSummary\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableMFReturnsSummary.PASP_SchemePlanNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CMFA_FolioNum {
                get {
                    try {
                        return ((string)(this[this.tableMFReturnsSummary.CMFA_FolioNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CMFA_FolioNum\' in table \'MFReturnsSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnsSummary.CMFA_FolioNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableMFReturnsSummary.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'MFReturnsSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnsSummary.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerId {
                get {
                    try {
                        return ((string)(this[this.tableMFReturnsSummary.CustomerIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerId\' in table \'MFReturnsSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnsSummary.CustomerIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PortfolioName {
                get {
                    try {
                        return ((string)(this[this.tableMFReturnsSummary.PortfolioNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PortfolioName\' in table \'MFReturnsSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnsSummary.PortfolioNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PortfolioId {
                get {
                    try {
                        return ((string)(this[this.tableMFReturnsSummary.PortfolioIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PortfolioId\' in table \'MFReturnsSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnsSummary.PortfolioIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Category {
                get {
                    try {
                        return ((string)(this[this.tableMFReturnsSummary.CategoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Category\' in table \'MFReturnsSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnsSummary.CategoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FolioStartDate {
                get {
                    try {
                        return ((string)(this[this.tableMFReturnsSummary.FolioStartDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FolioStartDate\' in table \'MFReturnsSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnsSummary.FolioStartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long NetAcqCost {
                get {
                    try {
                        return ((long)(this[this.tableMFReturnsSummary.NetAcqCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetAcqCost\' in table \'MFReturnsSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnsSummary.NetAcqCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CMFNP_DividendReinvested {
                get {
                    try {
                        return ((long)(this[this.tableMFReturnsSummary.CMFNP_DividendReinvestedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CMFNP_DividendReinvested\' in table \'MFReturnsSummary\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableMFReturnsSummary.CMFNP_DividendReinvestedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetHoldingsNull() {
                return this.IsNull(this.tableMFReturnsSummary.NetHoldingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetHoldingsNull() {
                this[this.tableMFReturnsSummary.NetHoldingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAvgCostNull() {
                return this.IsNull(this.tableMFReturnsSummary.AvgCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAvgCostNull() {
                this[this.tableMFReturnsSummary.AvgCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcqCostNull() {
                return this.IsNull(this.tableMFReturnsSummary.AcqCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcqCostNull() {
                this[this.tableMFReturnsSummary.AcqCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrNAVNull() {
                return this.IsNull(this.tableMFReturnsSummary.CurrNAVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurrNAVNull() {
                this[this.tableMFReturnsSummary.CurrNAVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrValueNull() {
                return this.IsNull(this.tableMFReturnsSummary.CurrValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurrValueNull() {
                this[this.tableMFReturnsSummary.CurrValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDividendIncomeNull() {
                return this.IsNull(this.tableMFReturnsSummary.DividendIncomeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDividendIncomeNull() {
                this[this.tableMFReturnsSummary.DividendIncomeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNotionalPLNull() {
                return this.IsNull(this.tableMFReturnsSummary.NotionalPLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNotionalPLNull() {
                this[this.tableMFReturnsSummary.NotionalPLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActualPLNull() {
                return this.IsNull(this.tableMFReturnsSummary.ActualPLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActualPLNull() {
                this[this.tableMFReturnsSummary.ActualPLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXIRRNull() {
                return this.IsNull(this.tableMFReturnsSummary.XIRRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXIRRNull() {
                this[this.tableMFReturnsSummary.XIRRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbsoluteReturnNull() {
                return this.IsNull(this.tableMFReturnsSummary.AbsoluteReturnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbsoluteReturnNull() {
                this[this.tableMFReturnsSummary.AbsoluteReturnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPASP_SchemePlanCodeNull() {
                return this.IsNull(this.tableMFReturnsSummary.PASP_SchemePlanCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPASP_SchemePlanCodeNull() {
                this[this.tableMFReturnsSummary.PASP_SchemePlanCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPASP_SchemePlanNameNull() {
                return this.IsNull(this.tableMFReturnsSummary.PASP_SchemePlanNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPASP_SchemePlanNameNull() {
                this[this.tableMFReturnsSummary.PASP_SchemePlanNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCMFA_FolioNumNull() {
                return this.IsNull(this.tableMFReturnsSummary.CMFA_FolioNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCMFA_FolioNumNull() {
                this[this.tableMFReturnsSummary.CMFA_FolioNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableMFReturnsSummary.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableMFReturnsSummary.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerIdNull() {
                return this.IsNull(this.tableMFReturnsSummary.CustomerIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerIdNull() {
                this[this.tableMFReturnsSummary.CustomerIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPortfolioNameNull() {
                return this.IsNull(this.tableMFReturnsSummary.PortfolioNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPortfolioNameNull() {
                this[this.tableMFReturnsSummary.PortfolioNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPortfolioIdNull() {
                return this.IsNull(this.tableMFReturnsSummary.PortfolioIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPortfolioIdNull() {
                this[this.tableMFReturnsSummary.PortfolioIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoryNull() {
                return this.IsNull(this.tableMFReturnsSummary.CategoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoryNull() {
                this[this.tableMFReturnsSummary.CategoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFolioStartDateNull() {
                return this.IsNull(this.tableMFReturnsSummary.FolioStartDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFolioStartDateNull() {
                this[this.tableMFReturnsSummary.FolioStartDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetAcqCostNull() {
                return this.IsNull(this.tableMFReturnsSummary.NetAcqCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetAcqCostNull() {
                this[this.tableMFReturnsSummary.NetAcqCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCMFNP_DividendReinvestedNull() {
                return this.IsNull(this.tableMFReturnsSummary.CMFNP_DividendReinvestedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCMFNP_DividendReinvestedNull() {
                this[this.tableMFReturnsSummary.CMFNP_DividendReinvestedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MFSchemePerformanceRowChangeEvent : global::System.EventArgs {
            
            private MFSchemePerformanceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MFSchemePerformanceRowChangeEvent(MFSchemePerformanceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MFSchemePerformanceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MFTopTenHoldingsRowChangeEvent : global::System.EventArgs {
            
            private MFTopTenHoldingsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MFTopTenHoldingsRowChangeEvent(MFTopTenHoldingsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MFTopTenHoldingsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MFTopTenSectorsRowChangeEvent : global::System.EventArgs {
            
            private MFTopTenSectorsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MFTopTenSectorsRowChangeEvent(MFTopTenSectorsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MFTopTenSectorsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PortfolioXIRRRowChangeEvent : global::System.EventArgs {
            
            private PortfolioXIRRRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PortfolioXIRRRowChangeEvent(PortfolioXIRRRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PortfolioXIRRRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MFReturnHoldingsRowChangeEvent : global::System.EventArgs {
            
            private MFReturnHoldingsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MFReturnHoldingsRowChangeEvent(MFReturnHoldingsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MFReturnHoldingsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MFReturnsSummaryRowChangeEvent : global::System.EventArgs {
            
            private MFReturnsSummaryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MFReturnsSummaryRowChangeEvent(MFReturnsSummaryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MFReturnsSummaryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591