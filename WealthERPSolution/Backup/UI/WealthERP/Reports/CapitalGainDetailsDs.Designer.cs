//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace WealthERP.Reports {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("CapitalGainDetailsDs")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class CapitalGainDetailsDs : global::System.Data.DataSet {
        
        private CapitalGainDetailsDataTable tableCapitalGainDetails;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CapitalGainDetailsDs() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected CapitalGainDetailsDs(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["CapitalGainDetails"] != null)) {
                    base.Tables.Add(new CapitalGainDetailsDataTable(ds.Tables["CapitalGainDetails"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CapitalGainDetailsDataTable CapitalGainDetails {
            get {
                return this.tableCapitalGainDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            CapitalGainDetailsDs cln = ((CapitalGainDetailsDs)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["CapitalGainDetails"] != null)) {
                    base.Tables.Add(new CapitalGainDetailsDataTable(ds.Tables["CapitalGainDetails"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableCapitalGainDetails = ((CapitalGainDetailsDataTable)(base.Tables["CapitalGainDetails"]));
            if ((initTable == true)) {
                if ((this.tableCapitalGainDetails != null)) {
                    this.tableCapitalGainDetails.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "CapitalGainDetailsDs";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/CapitalGainDetailsDs.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCapitalGainDetails = new CapitalGainDetailsDataTable();
            base.Tables.Add(this.tableCapitalGainDetails);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCapitalGainDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            CapitalGainDetailsDs ds = new CapitalGainDetailsDs();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void CapitalGainDetailsRowChangeEventHandler(object sender, CapitalGainDetailsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CapitalGainDetailsDataTable : global::System.Data.TypedTableBase<CapitalGainDetailsRow> {
            
            private global::System.Data.DataColumn columnUnits;
            
            private global::System.Data.DataColumn columnRedDate;
            
            private global::System.Data.DataColumn columnRedAmount;
            
            private global::System.Data.DataColumn columnPurchaseDate;
            
            private global::System.Data.DataColumn columnPurchaseAmount;
            
            private global::System.Data.DataColumn columnDaysInvestedFor;
            
            private global::System.Data.DataColumn columnGainOrLoss;
            
            private global::System.Data.DataColumn columnSTCGTax;
            
            private global::System.Data.DataColumn columnLTCGTax;
            
            private global::System.Data.DataColumn columnSchemePlanCode;
            
            private global::System.Data.DataColumn columnSchemePlanName;
            
            private global::System.Data.DataColumn columnPortfolioName;
            
            private global::System.Data.DataColumn columnPortfolioId;
            
            private global::System.Data.DataColumn columnCustomerId;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnFolioNum;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CapitalGainDetailsDataTable() {
                this.TableName = "CapitalGainDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CapitalGainDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CapitalGainDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitsColumn {
                get {
                    return this.columnUnits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RedDateColumn {
                get {
                    return this.columnRedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RedAmountColumn {
                get {
                    return this.columnRedAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PurchaseDateColumn {
                get {
                    return this.columnPurchaseDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PurchaseAmountColumn {
                get {
                    return this.columnPurchaseAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DaysInvestedForColumn {
                get {
                    return this.columnDaysInvestedFor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GainOrLossColumn {
                get {
                    return this.columnGainOrLoss;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STCGTaxColumn {
                get {
                    return this.columnSTCGTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LTCGTaxColumn {
                get {
                    return this.columnLTCGTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SchemePlanCodeColumn {
                get {
                    return this.columnSchemePlanCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SchemePlanNameColumn {
                get {
                    return this.columnSchemePlanName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PortfolioNameColumn {
                get {
                    return this.columnPortfolioName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PortfolioIdColumn {
                get {
                    return this.columnPortfolioId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIdColumn {
                get {
                    return this.columnCustomerId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FolioNumColumn {
                get {
                    return this.columnFolioNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CapitalGainDetailsRow this[int index] {
                get {
                    return ((CapitalGainDetailsRow)(this.Rows[index]));
                }
            }
            
            public event CapitalGainDetailsRowChangeEventHandler CapitalGainDetailsRowChanging;
            
            public event CapitalGainDetailsRowChangeEventHandler CapitalGainDetailsRowChanged;
            
            public event CapitalGainDetailsRowChangeEventHandler CapitalGainDetailsRowDeleting;
            
            public event CapitalGainDetailsRowChangeEventHandler CapitalGainDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCapitalGainDetailsRow(CapitalGainDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CapitalGainDetailsRow AddCapitalGainDetailsRow(
                        string Units, 
                        string RedDate, 
                        string RedAmount, 
                        string PurchaseDate, 
                        string PurchaseAmount, 
                        string DaysInvestedFor, 
                        string GainOrLoss, 
                        double STCGTax, 
                        double LTCGTax, 
                        string SchemePlanCode, 
                        string SchemePlanName, 
                        string PortfolioName, 
                        string PortfolioId, 
                        string CustomerId, 
                        string CustomerName, 
                        string FolioNum) {
                CapitalGainDetailsRow rowCapitalGainDetailsRow = ((CapitalGainDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Units,
                        RedDate,
                        RedAmount,
                        PurchaseDate,
                        PurchaseAmount,
                        DaysInvestedFor,
                        GainOrLoss,
                        STCGTax,
                        LTCGTax,
                        SchemePlanCode,
                        SchemePlanName,
                        PortfolioName,
                        PortfolioId,
                        CustomerId,
                        CustomerName,
                        FolioNum};
                rowCapitalGainDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCapitalGainDetailsRow);
                return rowCapitalGainDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CapitalGainDetailsDataTable cln = ((CapitalGainDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CapitalGainDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnUnits = base.Columns["Units"];
                this.columnRedDate = base.Columns["RedDate"];
                this.columnRedAmount = base.Columns["RedAmount"];
                this.columnPurchaseDate = base.Columns["PurchaseDate"];
                this.columnPurchaseAmount = base.Columns["PurchaseAmount"];
                this.columnDaysInvestedFor = base.Columns["DaysInvestedFor"];
                this.columnGainOrLoss = base.Columns["GainOrLoss"];
                this.columnSTCGTax = base.Columns["STCGTax"];
                this.columnLTCGTax = base.Columns["LTCGTax"];
                this.columnSchemePlanCode = base.Columns["SchemePlanCode"];
                this.columnSchemePlanName = base.Columns["SchemePlanName"];
                this.columnPortfolioName = base.Columns["PortfolioName"];
                this.columnPortfolioId = base.Columns["PortfolioId"];
                this.columnCustomerId = base.Columns["CustomerId"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnFolioNum = base.Columns["FolioNum"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnUnits = new global::System.Data.DataColumn("Units", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnits);
                this.columnRedDate = new global::System.Data.DataColumn("RedDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRedDate);
                this.columnRedAmount = new global::System.Data.DataColumn("RedAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRedAmount);
                this.columnPurchaseDate = new global::System.Data.DataColumn("PurchaseDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchaseDate);
                this.columnPurchaseAmount = new global::System.Data.DataColumn("PurchaseAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchaseAmount);
                this.columnDaysInvestedFor = new global::System.Data.DataColumn("DaysInvestedFor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDaysInvestedFor);
                this.columnGainOrLoss = new global::System.Data.DataColumn("GainOrLoss", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGainOrLoss);
                this.columnSTCGTax = new global::System.Data.DataColumn("STCGTax", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTCGTax);
                this.columnLTCGTax = new global::System.Data.DataColumn("LTCGTax", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLTCGTax);
                this.columnSchemePlanCode = new global::System.Data.DataColumn("SchemePlanCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSchemePlanCode);
                this.columnSchemePlanName = new global::System.Data.DataColumn("SchemePlanName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSchemePlanName);
                this.columnPortfolioName = new global::System.Data.DataColumn("PortfolioName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPortfolioName);
                this.columnPortfolioId = new global::System.Data.DataColumn("PortfolioId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPortfolioId);
                this.columnCustomerId = new global::System.Data.DataColumn("CustomerId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerId);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnFolioNum = new global::System.Data.DataColumn("FolioNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFolioNum);
                this.columnSchemePlanCode.Caption = "PASP_SchemePlanCode";
                this.columnSchemePlanName.Caption = "PASP_SchemePlanName";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CapitalGainDetailsRow NewCapitalGainDetailsRow() {
                return ((CapitalGainDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CapitalGainDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CapitalGainDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CapitalGainDetailsRowChanged != null)) {
                    this.CapitalGainDetailsRowChanged(this, new CapitalGainDetailsRowChangeEvent(((CapitalGainDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CapitalGainDetailsRowChanging != null)) {
                    this.CapitalGainDetailsRowChanging(this, new CapitalGainDetailsRowChangeEvent(((CapitalGainDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CapitalGainDetailsRowDeleted != null)) {
                    this.CapitalGainDetailsRowDeleted(this, new CapitalGainDetailsRowChangeEvent(((CapitalGainDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CapitalGainDetailsRowDeleting != null)) {
                    this.CapitalGainDetailsRowDeleting(this, new CapitalGainDetailsRowChangeEvent(((CapitalGainDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCapitalGainDetailsRow(CapitalGainDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CapitalGainDetailsDs ds = new CapitalGainDetailsDs();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CapitalGainDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CapitalGainDetailsRow : global::System.Data.DataRow {
            
            private CapitalGainDetailsDataTable tableCapitalGainDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CapitalGainDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCapitalGainDetails = ((CapitalGainDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Units {
                get {
                    try {
                        return ((string)(this[this.tableCapitalGainDetails.UnitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Units\' in table \'CapitalGainDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCapitalGainDetails.UnitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RedDate {
                get {
                    try {
                        return ((string)(this[this.tableCapitalGainDetails.RedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RedDate\' in table \'CapitalGainDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCapitalGainDetails.RedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RedAmount {
                get {
                    try {
                        return ((string)(this[this.tableCapitalGainDetails.RedAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RedAmount\' in table \'CapitalGainDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCapitalGainDetails.RedAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PurchaseDate {
                get {
                    try {
                        return ((string)(this[this.tableCapitalGainDetails.PurchaseDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PurchaseDate\' in table \'CapitalGainDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCapitalGainDetails.PurchaseDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PurchaseAmount {
                get {
                    try {
                        return ((string)(this[this.tableCapitalGainDetails.PurchaseAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PurchaseAmount\' in table \'CapitalGainDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCapitalGainDetails.PurchaseAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DaysInvestedFor {
                get {
                    try {
                        return ((string)(this[this.tableCapitalGainDetails.DaysInvestedForColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DaysInvestedFor\' in table \'CapitalGainDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCapitalGainDetails.DaysInvestedForColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GainOrLoss {
                get {
                    try {
                        return ((string)(this[this.tableCapitalGainDetails.GainOrLossColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GainOrLoss\' in table \'CapitalGainDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCapitalGainDetails.GainOrLossColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double STCGTax {
                get {
                    try {
                        return ((double)(this[this.tableCapitalGainDetails.STCGTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STCGTax\' in table \'CapitalGainDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCapitalGainDetails.STCGTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LTCGTax {
                get {
                    try {
                        return ((double)(this[this.tableCapitalGainDetails.LTCGTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LTCGTax\' in table \'CapitalGainDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCapitalGainDetails.LTCGTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SchemePlanCode {
                get {
                    try {
                        return ((string)(this[this.tableCapitalGainDetails.SchemePlanCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SchemePlanCode\' in table \'CapitalGainDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCapitalGainDetails.SchemePlanCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SchemePlanName {
                get {
                    try {
                        return ((string)(this[this.tableCapitalGainDetails.SchemePlanNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SchemePlanName\' in table \'CapitalGainDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCapitalGainDetails.SchemePlanNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PortfolioName {
                get {
                    try {
                        return ((string)(this[this.tableCapitalGainDetails.PortfolioNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PortfolioName\' in table \'CapitalGainDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCapitalGainDetails.PortfolioNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PortfolioId {
                get {
                    try {
                        return ((string)(this[this.tableCapitalGainDetails.PortfolioIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PortfolioId\' in table \'CapitalGainDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCapitalGainDetails.PortfolioIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerId {
                get {
                    try {
                        return ((string)(this[this.tableCapitalGainDetails.CustomerIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerId\' in table \'CapitalGainDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCapitalGainDetails.CustomerIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableCapitalGainDetails.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'CapitalGainDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCapitalGainDetails.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FolioNum {
                get {
                    try {
                        return ((string)(this[this.tableCapitalGainDetails.FolioNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FolioNum\' in table \'CapitalGainDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCapitalGainDetails.FolioNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitsNull() {
                return this.IsNull(this.tableCapitalGainDetails.UnitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitsNull() {
                this[this.tableCapitalGainDetails.UnitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRedDateNull() {
                return this.IsNull(this.tableCapitalGainDetails.RedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRedDateNull() {
                this[this.tableCapitalGainDetails.RedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRedAmountNull() {
                return this.IsNull(this.tableCapitalGainDetails.RedAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRedAmountNull() {
                this[this.tableCapitalGainDetails.RedAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchaseDateNull() {
                return this.IsNull(this.tableCapitalGainDetails.PurchaseDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchaseDateNull() {
                this[this.tableCapitalGainDetails.PurchaseDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchaseAmountNull() {
                return this.IsNull(this.tableCapitalGainDetails.PurchaseAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchaseAmountNull() {
                this[this.tableCapitalGainDetails.PurchaseAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDaysInvestedForNull() {
                return this.IsNull(this.tableCapitalGainDetails.DaysInvestedForColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDaysInvestedForNull() {
                this[this.tableCapitalGainDetails.DaysInvestedForColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGainOrLossNull() {
                return this.IsNull(this.tableCapitalGainDetails.GainOrLossColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGainOrLossNull() {
                this[this.tableCapitalGainDetails.GainOrLossColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTCGTaxNull() {
                return this.IsNull(this.tableCapitalGainDetails.STCGTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTCGTaxNull() {
                this[this.tableCapitalGainDetails.STCGTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLTCGTaxNull() {
                return this.IsNull(this.tableCapitalGainDetails.LTCGTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLTCGTaxNull() {
                this[this.tableCapitalGainDetails.LTCGTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSchemePlanCodeNull() {
                return this.IsNull(this.tableCapitalGainDetails.SchemePlanCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSchemePlanCodeNull() {
                this[this.tableCapitalGainDetails.SchemePlanCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSchemePlanNameNull() {
                return this.IsNull(this.tableCapitalGainDetails.SchemePlanNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSchemePlanNameNull() {
                this[this.tableCapitalGainDetails.SchemePlanNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPortfolioNameNull() {
                return this.IsNull(this.tableCapitalGainDetails.PortfolioNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPortfolioNameNull() {
                this[this.tableCapitalGainDetails.PortfolioNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPortfolioIdNull() {
                return this.IsNull(this.tableCapitalGainDetails.PortfolioIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPortfolioIdNull() {
                this[this.tableCapitalGainDetails.PortfolioIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerIdNull() {
                return this.IsNull(this.tableCapitalGainDetails.CustomerIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerIdNull() {
                this[this.tableCapitalGainDetails.CustomerIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableCapitalGainDetails.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableCapitalGainDetails.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFolioNumNull() {
                return this.IsNull(this.tableCapitalGainDetails.FolioNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFolioNumNull() {
                this[this.tableCapitalGainDetails.FolioNumColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CapitalGainDetailsRowChangeEvent : global::System.EventArgs {
            
            private CapitalGainDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CapitalGainDetailsRowChangeEvent(CapitalGainDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CapitalGainDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591