//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace WealthERP.Reports {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("MFReturnsDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class MFReturnsDS : global::System.Data.DataSet {
        
        private MFReturnsSummaryDataTable tableMFReturnsSummary;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MFReturnsDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected MFReturnsDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["MFReturnsSummary"] != null)) {
                    base.Tables.Add(new MFReturnsSummaryDataTable(ds.Tables["MFReturnsSummary"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MFReturnsSummaryDataTable MFReturnsSummary {
            get {
                return this.tableMFReturnsSummary;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            MFReturnsDS cln = ((MFReturnsDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["MFReturnsSummary"] != null)) {
                    base.Tables.Add(new MFReturnsSummaryDataTable(ds.Tables["MFReturnsSummary"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableMFReturnsSummary = ((MFReturnsSummaryDataTable)(base.Tables["MFReturnsSummary"]));
            if ((initTable == true)) {
                if ((this.tableMFReturnsSummary != null)) {
                    this.tableMFReturnsSummary.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "MFReturnsDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/MFReturnsDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableMFReturnsSummary = new MFReturnsSummaryDataTable();
            base.Tables.Add(this.tableMFReturnsSummary);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMFReturnsSummary() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            MFReturnsDS ds = new MFReturnsDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void MFReturnsSummaryRowChangeEventHandler(object sender, MFReturnsSummaryRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MFReturnsSummaryDataTable : global::System.Data.TypedTableBase<MFReturnsSummaryRow> {
            
            private global::System.Data.DataColumn columnNetHoldings;
            
            private global::System.Data.DataColumn columnAvgCost;
            
            private global::System.Data.DataColumn columnAcqCost;
            
            private global::System.Data.DataColumn columnCurrNAV;
            
            private global::System.Data.DataColumn columnCurrValue;
            
            private global::System.Data.DataColumn columnDividendIncome;
            
            private global::System.Data.DataColumn columnNotionalPL;
            
            private global::System.Data.DataColumn columnActualPL;
            
            private global::System.Data.DataColumn columnXIRR;
            
            private global::System.Data.DataColumn columnAbsoluteReturn;
            
            private global::System.Data.DataColumn columnPASP_SchemePlanCode;
            
            private global::System.Data.DataColumn columnPASP_SchemePlanName;
            
            private global::System.Data.DataColumn columnCMFA_FolioNum;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnCustomerId;
            
            private global::System.Data.DataColumn columnPortfolioName;
            
            private global::System.Data.DataColumn columnPortfolioId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MFReturnsSummaryDataTable() {
                this.TableName = "MFReturnsSummary";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MFReturnsSummaryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MFReturnsSummaryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetHoldingsColumn {
                get {
                    return this.columnNetHoldings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AvgCostColumn {
                get {
                    return this.columnAvgCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcqCostColumn {
                get {
                    return this.columnAcqCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurrNAVColumn {
                get {
                    return this.columnCurrNAV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurrValueColumn {
                get {
                    return this.columnCurrValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DividendIncomeColumn {
                get {
                    return this.columnDividendIncome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NotionalPLColumn {
                get {
                    return this.columnNotionalPL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ActualPLColumn {
                get {
                    return this.columnActualPL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn XIRRColumn {
                get {
                    return this.columnXIRR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AbsoluteReturnColumn {
                get {
                    return this.columnAbsoluteReturn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PASP_SchemePlanCodeColumn {
                get {
                    return this.columnPASP_SchemePlanCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PASP_SchemePlanNameColumn {
                get {
                    return this.columnPASP_SchemePlanName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CMFA_FolioNumColumn {
                get {
                    return this.columnCMFA_FolioNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIdColumn {
                get {
                    return this.columnCustomerId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PortfolioNameColumn {
                get {
                    return this.columnPortfolioName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PortfolioIdColumn {
                get {
                    return this.columnPortfolioId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MFReturnsSummaryRow this[int index] {
                get {
                    return ((MFReturnsSummaryRow)(this.Rows[index]));
                }
            }
            
            public event MFReturnsSummaryRowChangeEventHandler MFReturnsSummaryRowChanging;
            
            public event MFReturnsSummaryRowChangeEventHandler MFReturnsSummaryRowChanged;
            
            public event MFReturnsSummaryRowChangeEventHandler MFReturnsSummaryRowDeleting;
            
            public event MFReturnsSummaryRowChangeEventHandler MFReturnsSummaryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMFReturnsSummaryRow(MFReturnsSummaryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MFReturnsSummaryRow AddMFReturnsSummaryRow(
                        string NetHoldings, 
                        string AvgCost, 
                        string AcqCost, 
                        string CurrNAV, 
                        string CurrValue, 
                        long DividendIncome, 
                        long NotionalPL, 
                        long ActualPL, 
                        string XIRR, 
                        string AbsoluteReturn, 
                        string PASP_SchemePlanCode, 
                        string PASP_SchemePlanName, 
                        string CMFA_FolioNum, 
                        string CustomerName, 
                        string CustomerId, 
                        string PortfolioName, 
                        string PortfolioId) {
                MFReturnsSummaryRow rowMFReturnsSummaryRow = ((MFReturnsSummaryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NetHoldings,
                        AvgCost,
                        AcqCost,
                        CurrNAV,
                        CurrValue,
                        DividendIncome,
                        NotionalPL,
                        ActualPL,
                        XIRR,
                        AbsoluteReturn,
                        PASP_SchemePlanCode,
                        PASP_SchemePlanName,
                        CMFA_FolioNum,
                        CustomerName,
                        CustomerId,
                        PortfolioName,
                        PortfolioId};
                rowMFReturnsSummaryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMFReturnsSummaryRow);
                return rowMFReturnsSummaryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MFReturnsSummaryDataTable cln = ((MFReturnsSummaryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MFReturnsSummaryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNetHoldings = base.Columns["NetHoldings"];
                this.columnAvgCost = base.Columns["AvgCost"];
                this.columnAcqCost = base.Columns["AcqCost"];
                this.columnCurrNAV = base.Columns["CurrNAV"];
                this.columnCurrValue = base.Columns["CurrValue"];
                this.columnDividendIncome = base.Columns["DividendIncome"];
                this.columnNotionalPL = base.Columns["NotionalPL"];
                this.columnActualPL = base.Columns["ActualPL"];
                this.columnXIRR = base.Columns["XIRR"];
                this.columnAbsoluteReturn = base.Columns["AbsoluteReturn"];
                this.columnPASP_SchemePlanCode = base.Columns["PASP_SchemePlanCode"];
                this.columnPASP_SchemePlanName = base.Columns["PASP_SchemePlanName"];
                this.columnCMFA_FolioNum = base.Columns["CMFA_FolioNum"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnCustomerId = base.Columns["CustomerId"];
                this.columnPortfolioName = base.Columns["PortfolioName"];
                this.columnPortfolioId = base.Columns["PortfolioId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNetHoldings = new global::System.Data.DataColumn("NetHoldings", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetHoldings);
                this.columnAvgCost = new global::System.Data.DataColumn("AvgCost", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAvgCost);
                this.columnAcqCost = new global::System.Data.DataColumn("AcqCost", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcqCost);
                this.columnCurrNAV = new global::System.Data.DataColumn("CurrNAV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrNAV);
                this.columnCurrValue = new global::System.Data.DataColumn("CurrValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrValue);
                this.columnDividendIncome = new global::System.Data.DataColumn("DividendIncome", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDividendIncome);
                this.columnNotionalPL = new global::System.Data.DataColumn("NotionalPL", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotionalPL);
                this.columnActualPL = new global::System.Data.DataColumn("ActualPL", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualPL);
                this.columnXIRR = new global::System.Data.DataColumn("XIRR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXIRR);
                this.columnAbsoluteReturn = new global::System.Data.DataColumn("AbsoluteReturn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbsoluteReturn);
                this.columnPASP_SchemePlanCode = new global::System.Data.DataColumn("PASP_SchemePlanCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPASP_SchemePlanCode);
                this.columnPASP_SchemePlanName = new global::System.Data.DataColumn("PASP_SchemePlanName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPASP_SchemePlanName);
                this.columnCMFA_FolioNum = new global::System.Data.DataColumn("CMFA_FolioNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMFA_FolioNum);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnCustomerId = new global::System.Data.DataColumn("CustomerId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerId);
                this.columnPortfolioName = new global::System.Data.DataColumn("PortfolioName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPortfolioName);
                this.columnPortfolioId = new global::System.Data.DataColumn("PortfolioId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPortfolioId);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MFReturnsSummaryRow NewMFReturnsSummaryRow() {
                return ((MFReturnsSummaryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MFReturnsSummaryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MFReturnsSummaryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MFReturnsSummaryRowChanged != null)) {
                    this.MFReturnsSummaryRowChanged(this, new MFReturnsSummaryRowChangeEvent(((MFReturnsSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MFReturnsSummaryRowChanging != null)) {
                    this.MFReturnsSummaryRowChanging(this, new MFReturnsSummaryRowChangeEvent(((MFReturnsSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MFReturnsSummaryRowDeleted != null)) {
                    this.MFReturnsSummaryRowDeleted(this, new MFReturnsSummaryRowChangeEvent(((MFReturnsSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MFReturnsSummaryRowDeleting != null)) {
                    this.MFReturnsSummaryRowDeleting(this, new MFReturnsSummaryRowChangeEvent(((MFReturnsSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMFReturnsSummaryRow(MFReturnsSummaryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MFReturnsDS ds = new MFReturnsDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MFReturnsSummaryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MFReturnsSummaryRow : global::System.Data.DataRow {
            
            private MFReturnsSummaryDataTable tableMFReturnsSummary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MFReturnsSummaryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMFReturnsSummary = ((MFReturnsSummaryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NetHoldings {
                get {
                    try {
                        return ((string)(this[this.tableMFReturnsSummary.NetHoldingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetHoldings\' in table \'MFReturnsSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnsSummary.NetHoldingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AvgCost {
                get {
                    try {
                        return ((string)(this[this.tableMFReturnsSummary.AvgCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AvgCost\' in table \'MFReturnsSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnsSummary.AvgCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AcqCost {
                get {
                    try {
                        return ((string)(this[this.tableMFReturnsSummary.AcqCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AcqCost\' in table \'MFReturnsSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnsSummary.AcqCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CurrNAV {
                get {
                    try {
                        return ((string)(this[this.tableMFReturnsSummary.CurrNAVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrNAV\' in table \'MFReturnsSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnsSummary.CurrNAVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CurrValue {
                get {
                    try {
                        return ((string)(this[this.tableMFReturnsSummary.CurrValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrValue\' in table \'MFReturnsSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnsSummary.CurrValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long DividendIncome {
                get {
                    try {
                        return ((long)(this[this.tableMFReturnsSummary.DividendIncomeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DividendIncome\' in table \'MFReturnsSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnsSummary.DividendIncomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long NotionalPL {
                get {
                    try {
                        return ((long)(this[this.tableMFReturnsSummary.NotionalPLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NotionalPL\' in table \'MFReturnsSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnsSummary.NotionalPLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ActualPL {
                get {
                    try {
                        return ((long)(this[this.tableMFReturnsSummary.ActualPLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualPL\' in table \'MFReturnsSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnsSummary.ActualPLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string XIRR {
                get {
                    try {
                        return ((string)(this[this.tableMFReturnsSummary.XIRRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XIRR\' in table \'MFReturnsSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnsSummary.XIRRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AbsoluteReturn {
                get {
                    try {
                        return ((string)(this[this.tableMFReturnsSummary.AbsoluteReturnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AbsoluteReturn\' in table \'MFReturnsSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnsSummary.AbsoluteReturnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PASP_SchemePlanCode {
                get {
                    try {
                        return ((string)(this[this.tableMFReturnsSummary.PASP_SchemePlanCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PASP_SchemePlanCode\' in table \'MFReturnsSummary\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableMFReturnsSummary.PASP_SchemePlanCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PASP_SchemePlanName {
                get {
                    try {
                        return ((string)(this[this.tableMFReturnsSummary.PASP_SchemePlanNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PASP_SchemePlanName\' in table \'MFReturnsSummary\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableMFReturnsSummary.PASP_SchemePlanNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CMFA_FolioNum {
                get {
                    try {
                        return ((string)(this[this.tableMFReturnsSummary.CMFA_FolioNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CMFA_FolioNum\' in table \'MFReturnsSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnsSummary.CMFA_FolioNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableMFReturnsSummary.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'MFReturnsSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnsSummary.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerId {
                get {
                    try {
                        return ((string)(this[this.tableMFReturnsSummary.CustomerIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerId\' in table \'MFReturnsSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnsSummary.CustomerIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PortfolioName {
                get {
                    try {
                        return ((string)(this[this.tableMFReturnsSummary.PortfolioNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PortfolioName\' in table \'MFReturnsSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnsSummary.PortfolioNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PortfolioId {
                get {
                    try {
                        return ((string)(this[this.tableMFReturnsSummary.PortfolioIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PortfolioId\' in table \'MFReturnsSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMFReturnsSummary.PortfolioIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetHoldingsNull() {
                return this.IsNull(this.tableMFReturnsSummary.NetHoldingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetHoldingsNull() {
                this[this.tableMFReturnsSummary.NetHoldingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAvgCostNull() {
                return this.IsNull(this.tableMFReturnsSummary.AvgCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAvgCostNull() {
                this[this.tableMFReturnsSummary.AvgCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcqCostNull() {
                return this.IsNull(this.tableMFReturnsSummary.AcqCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcqCostNull() {
                this[this.tableMFReturnsSummary.AcqCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrNAVNull() {
                return this.IsNull(this.tableMFReturnsSummary.CurrNAVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurrNAVNull() {
                this[this.tableMFReturnsSummary.CurrNAVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrValueNull() {
                return this.IsNull(this.tableMFReturnsSummary.CurrValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurrValueNull() {
                this[this.tableMFReturnsSummary.CurrValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDividendIncomeNull() {
                return this.IsNull(this.tableMFReturnsSummary.DividendIncomeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDividendIncomeNull() {
                this[this.tableMFReturnsSummary.DividendIncomeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNotionalPLNull() {
                return this.IsNull(this.tableMFReturnsSummary.NotionalPLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNotionalPLNull() {
                this[this.tableMFReturnsSummary.NotionalPLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActualPLNull() {
                return this.IsNull(this.tableMFReturnsSummary.ActualPLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActualPLNull() {
                this[this.tableMFReturnsSummary.ActualPLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXIRRNull() {
                return this.IsNull(this.tableMFReturnsSummary.XIRRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXIRRNull() {
                this[this.tableMFReturnsSummary.XIRRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbsoluteReturnNull() {
                return this.IsNull(this.tableMFReturnsSummary.AbsoluteReturnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbsoluteReturnNull() {
                this[this.tableMFReturnsSummary.AbsoluteReturnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPASP_SchemePlanCodeNull() {
                return this.IsNull(this.tableMFReturnsSummary.PASP_SchemePlanCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPASP_SchemePlanCodeNull() {
                this[this.tableMFReturnsSummary.PASP_SchemePlanCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPASP_SchemePlanNameNull() {
                return this.IsNull(this.tableMFReturnsSummary.PASP_SchemePlanNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPASP_SchemePlanNameNull() {
                this[this.tableMFReturnsSummary.PASP_SchemePlanNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCMFA_FolioNumNull() {
                return this.IsNull(this.tableMFReturnsSummary.CMFA_FolioNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCMFA_FolioNumNull() {
                this[this.tableMFReturnsSummary.CMFA_FolioNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableMFReturnsSummary.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableMFReturnsSummary.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerIdNull() {
                return this.IsNull(this.tableMFReturnsSummary.CustomerIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerIdNull() {
                this[this.tableMFReturnsSummary.CustomerIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPortfolioNameNull() {
                return this.IsNull(this.tableMFReturnsSummary.PortfolioNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPortfolioNameNull() {
                this[this.tableMFReturnsSummary.PortfolioNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPortfolioIdNull() {
                return this.IsNull(this.tableMFReturnsSummary.PortfolioIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPortfolioIdNull() {
                this[this.tableMFReturnsSummary.PortfolioIdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MFReturnsSummaryRowChangeEvent : global::System.EventArgs {
            
            private MFReturnsSummaryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MFReturnsSummaryRowChangeEvent(MFReturnsSummaryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MFReturnsSummaryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591